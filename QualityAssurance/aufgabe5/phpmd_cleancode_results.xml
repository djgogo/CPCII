<?xml version="1.0" encoding="UTF-8" ?>
<pmd version="@project.version@" timestamp="2016-09-26T16:56:35+02:00">
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php">
        <violation beginline="52" endline="52" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Doctrine\Common\EventArgs' in method 'dispatchEvent'.
        </violation>
        <violation beginline="107" endline="110" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addEventListener uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="129" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method removeEventListener uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/DataCollector/DoctrineDataCollector.php">
        <violation beginline="126" endline="126" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Doctrine\DBAL\Types\Type' in method 'sanitizeQuery'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/DependencyInjection/AbstractDoctrineExtension.php">
        <violation beginline="114" endline="116" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setMappingDriverAlias uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="131" endline="133" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setMappingDriverConfig uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="163" endline="165" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getMappingDriverBundleConfigDefaults uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="166" endline="168" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getMappingDriverBundleConfigDefaults uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="188" endline="191" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method registerMappingDrivers uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="200" endline="202" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method registerMappingDrivers uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="209" endline="213" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method registerMappingDrivers uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPass.php">
        <violation beginline="89" endline="89" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method groupByConnection has a boolean flag argument $isListener, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="117" endline="119" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method groupByConnection uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Form/ChoiceList/EntityChoiceList.php">
        <violation beginline="384" endline="386" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Form/DataTransformer/CollectionToArrayTransformer.php">
        <violation beginline="57" endline="59" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method reverseTransform uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Form/DoctrineOrmExtension.php">
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method 'loadTypes'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Form/Type/DoctrineType.php">
        <violation beginline="48" endline="48" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method '__construct'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/HttpFoundation/DbalSessionHandler.php">
        <violation beginline="130" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method write uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Logger/DbalLogger.php">
        <violation beginline="70" endline="75" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method startQuery uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Security/User/EntityUserProvider.php">
        <violation beginline="56" endline="62" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method loadUserByUsername uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="82" endline="98" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method refreshUser uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Tests/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPassTest.php">
        <violation beginline="138" endline="138" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method createBuilder has a boolean flag argument $multipleConnections, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Tests/DoctrineOrmTestCase.php">
        <violation beginline="40" endline="40" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'createTestEntityManager'.
        </violation>
        <violation beginline="57" endline="57" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Doctrine\ORM\EntityManager' in method 'createTestEntityManager'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Tests/Form/Type/EntityTypePerformanceTest.php">
        <violation beginline="69" endline="69" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Bridge\Doctrine\Tests\DoctrineOrmTestCase' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Tests/Form/Type/EntityTypeTest.php">
        <violation beginline="63" endline="63" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Bridge\Doctrine\Tests\DoctrineOrmTestCase' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Tests/Validator/Constraints/UniqueValidatorTest.php">
        <violation beginline="109" endline="109" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method createValidator has a boolean flag argument $ignoreNull, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Validator/Constraints/UniqueEntityValidator.php">
        <violation beginline="65" endline="67" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Monolog/Handler/ChromePhpHandler.php">
        <violation beginline="71" endline="73" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method sendHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Monolog/Handler/FirePHPHandler.php">
        <violation beginline="72" endline="74" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method sendHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Monolog/Tests/Processor/WebProcessorTest.php">
        <violation beginline="74" endline="74" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Monolog\Logger' in method 'getRecord'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Propel1/Form/EventListener/TranslationCollectionFormListener.php">
        <violation beginline="88" endline="90" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method preSetData uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Propel1/Form/PropelExtension.php">
        <violation beginline="27" endline="27" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method 'loadTypes'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Propel1/Form/Type/ModelType.php">
        <violation beginline="60" endline="60" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method '__construct'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Propel1/Security/User/PropelUserProvider.php">
        <violation beginline="71" endline="73" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method loadUserByUsername uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Swiftmailer/DataCollector/MessageDataCollector.php">
        <violation beginline="55" endline="58" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method collect uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/CodeExtension.php">
        <violation beginline="75" endline="77" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method abbrMethod uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="107" endline="109" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method formatArgs uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/RoutingExtension.php">
        <violation beginline="43" endline="43" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getPath has a boolean flag argument $relative, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="48" endline="48" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getUrl has a boolean flag argument $schemeRelative, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/YamlExtension.php">
        <violation beginline="34" endline="34" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method encode has a boolean flag argument $dumpObjects, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="45" endline="45" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dump has a boolean flag argument $dumpObjects, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Node/SearchAndRenderBlockNode.php">
        <violation beginline="66" endline="73" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="74" endline="80" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Node/TransNode.php">
        <violation beginline="65" endline="67" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="73" endline="75" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="92" endline="94" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compileString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="105" endline="115" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compileString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/NodeVisitor/TranslationDefaultDomainNodeVisitor.php">
        <violation beginline="51" endline="57" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method enterNode uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/NodeVisitor/TranslationNodeVisitor.php">
        <violation beginline="113" endline="115" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getReadDomainFromArguments uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Tests/Extension/HttpKernelExtensionTest.php">
        <violation beginline="57" endline="57" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'getFragmentHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Tests/Extension/TranslationExtensionTest.php">
        <violation beginline="141" endline="143" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getTemplate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Tests/NodeVisitor/TranslationDefaultDomainNodeVisitorTest.php">
        <violation beginline="21" endline="21" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'testDefaultDomainAssignment'.
        </violation>
        <violation beginline="47" endline="47" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'testNewModuleWithoutDefaultDomainTag'.
        </violation>
        <violation beginline="69" endline="69" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getDefaultDomainAssignmentTestData'.
        </violation>
        <violation beginline="70" endline="70" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getDefaultDomainAssignmentTestData'.
        </violation>
        <violation beginline="71" endline="71" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getDefaultDomainAssignmentTestData'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Tests/NodeVisitor/TranslationNodeVisitorTest.php">
        <violation beginline="44" endline="44" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getMessagesExtractionTestData'.
        </violation>
        <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getMessagesExtractionTestData'.
        </violation>
        <violation beginline="46" endline="46" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getMessagesExtractionTestData'.
        </violation>
        <violation beginline="47" endline="47" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getMessagesExtractionTestData'.
        </violation>
        <violation beginline="48" endline="48" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getMessagesExtractionTestData'.
        </violation>
        <violation beginline="49" endline="49" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Bridge\Twig\Tests\NodeVisitor\TwigNodeProvider' in method 'getMessagesExtractionTestData'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bridge/Twig/TokenParser/FormThemeTokenParser.php">
        <violation beginline="40" endline="45" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Client.php">
        <violation beginline="100" endline="102" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doRequest uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="148" endline="150" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getScript uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/AssetsInstallCommand.php">
        <violation beginline="99" endline="101" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="103" endline="107" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php">
        <violation beginline="74" endline="87" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="97" endline="97" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method warmup has a boolean flag argument $enableOptionalWarmers, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ConfigDumpReferenceCommand.php">
        <violation beginline="81" endline="97" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ContainerDebugCommand.php">
        <violation beginline="104" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="113" endline="115" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="118" endline="118" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method outputServices has a boolean flag argument $showPrivate, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="123" endline="125" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method outputServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="197" endline="199" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method outputServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="201" endline="203" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method outputServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="211" endline="215" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method outputServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="256" endline="258" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method outputService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="273" endline="278" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method outputService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="335" endline="335" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method outputTags has a boolean flag argument $showPrivate, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/RouterDebugCommand.php">
        <violation beginline="74" endline="76" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/TranslationUpdateCommand.php">
        <violation beginline="115" endline="115" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'execute'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/ControllerResolver.php">
        <violation beginline="67" endline="69" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createController uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/RedirectController.php">
        <violation beginline="40" endline="40" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method redirectAction has a boolean flag argument $permanent, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="69" endline="69" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method urlRedirectAction has a boolean flag argument $permanent, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Configuration.php">
        <violation beginline="245" endline="247" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addTemplatingSection uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/FrameworkExtension.php">
        <violation beginline="161" endline="163" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method registerFormConfiguration uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="326" endline="328" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method registerSessionConfiguration uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="407" endline="410" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method registerTemplatingConfiguration uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="444" endline="449" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method registerTemplatingConfiguration uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="498" endline="505" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createPackageDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/FrameworkBundle.php">
        <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'boot'.
        </violation>
        <violation beginline="47" endline="47" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'boot'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/HttpCache/HttpCache.php">
        <violation beginline="54" endline="54" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method forward has a boolean flag argument $raw, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Templating/Helper/CodeHelper.php">
        <violation beginline="72" endline="74" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method abbrMethod uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="104" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method formatArgs uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Templating/Loader/TemplateLocator.php">
        <violation beginline="66" endline="66" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method locate has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Fragments/ContainerAwareHIncludeFragmentRendererTest.php">
        <violation beginline="28" endline="28" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRender'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Functional/Bundle/TestBundle/Controller/SessionController.php">
        <violation beginline="66" endline="68" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method showFlashAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/Helper/Fixtures/StubTemplateNameParser.php">
        <violation beginline="37" endline="39" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/TemplateFilenameParserTest.php">
        <violation beginline="41" endline="43" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseFromFilename uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Translation/PhpExtractor.php">
        <violation beginline="109" endline="111" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseTokens uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DataCollector/SecurityDataCollector.php">
        <violation beginline="54" endline="62" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method collect uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php">
        <violation beginline="85" endline="87" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addConfiguration uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php">
        <violation beginline="46" endline="49" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method create uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="138" endline="140" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addConfiguration uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php">
        <violation beginline="259" endline="261" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createFirewall uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="293" endline="297" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createFirewall uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="507" endline="507" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method createUserDaoProvider has a boolean flag argument $master, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Templating/Helper/LogoutUrlHelper.php">
        <violation beginline="109" endline="111" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method generateLogoutUrl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/CsrfFormLoginBundle/Form/UserLoginFormType.php">
        <violation beginline="63" endline="65" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LocalizedController.php">
        <violation beginline="25" endline="27" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method loginAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/FormLoginBundle/Controller/LoginController.php">
        <violation beginline="26" endline="28" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method loginAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Command/LintCommand.php">
        <violation beginline="85" endline="88" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="119" endline="121" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method renderException uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigLoaderPass.php">
        <violation beginline="41" endline="47" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method process uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/DependencyInjection/TwigExtension.php">
        <violation beginline="69" endline="71" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="95" endline="97" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Tests/Controller/ExceptionControllerTest.php">
        <violation beginline="38" endline="38" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testOnlyClearOwnOutputBuffers'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/TokenParser/RenderTokenParser.php">
        <violation beginline="39" endline="41" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="48" endline="50" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Controller/ProfilerController.php">
        <violation beginline="247" endline="255" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method searchBarAction uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/DependencyInjection/WebProfilerExtension.php">
        <violation beginline="53" endline="55" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/EventListener/WebDebugToolbarListener.php">
        <violation beginline="41" endline="41" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $interceptRedirects, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="102" endline="105" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method injectToolbar uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Tests/EventListener/WebDebugToolbarListenerTest.php">
        <violation beginline="188" endline="188" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getRequestMock has a boolean flag argument $isXmlHttpRequest, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="188" endline="188" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getRequestMock has a boolean flag argument $hasSession, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/BrowserKit/Client.php">
        <violation beginline="68" endline="68" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method followRedirects has a boolean flag argument $followRedirect, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="82" endline="82" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insulate has a boolean flag argument $insulated, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="242" endline="242" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method request has a boolean flag argument $changeHistory, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="263" endline="265" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method request uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="455" endline="460" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getAbsoluteUri uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="488" endline="488" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method requestFromRequest has a boolean flag argument $changeHistory, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/BrowserKit/Cookie.php">
        <violation beginline="62" endline="62" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $secure, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="62" endline="62" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $httponly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="62" endline="62" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $encodedValue, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="67" endline="70" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="205" endline="205" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'parseDate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/BrowserKit/CookieJar.php">
        <violation beginline="105" endline="107" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateFromSetCookie uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="113" endline="113" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\BrowserKit\Cookie' in method 'updateFromSetCookie'.
        </violation>
        <violation beginline="160" endline="160" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method allValues has a boolean flag argument $returnsRawValue, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/BrowserKit/Response.php">
        <violation beginline="57" endline="61" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __toString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="124" endline="124" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getHeader has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/BrowserKit/Tests/CookieTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testToFromString'.
        </violation>
        <violation beginline="70" endline="70" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringWithCapitalization'.
        </violation>
        <violation beginline="71" endline="71" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringWithCapitalization'.
        </violation>
        <violation beginline="72" endline="72" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringWithCapitalization'.
        </violation>
        <violation beginline="77" endline="77" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringWithUrl'.
        </violation>
        <violation beginline="78" endline="78" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringWithUrl'.
        </violation>
        <violation beginline="79" endline="79" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringWithUrl'.
        </violation>
        <violation beginline="80" endline="80" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringWithUrl'.
        </violation>
        <violation beginline="86" endline="86" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringThrowsAnExceptionIfCookieIsNotValid'.
        </violation>
        <violation beginline="92" endline="92" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringThrowsAnExceptionIfCookieDateIsNotValid'.
        </violation>
        <violation beginline="98" endline="98" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\BrowserKit\Cookie' in method 'testFromStringThrowsAnExceptionIfUrlIsNotValid'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/ApcClassLoader.php">
        <violation beginline="84" endline="84" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method register has a boolean flag argument $prepend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/ClassCollectionLoader.php">
        <violation beginline="37" endline="37" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method load has a boolean flag argument $adaptive, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="69" endline="87" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="78" endline="86" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="171" endline="174" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method fixNamespaceDeclarations uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="186" endline="188" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method fixNamespaceDeclarations uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/ClassLoader.php">
        <violation beginline="98" endline="100" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addPrefix uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="129" endline="129" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method register has a boolean flag argument $prepend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="175" endline="179" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method findFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/MapClassLoader.php">
        <violation beginline="38" endline="38" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method register has a boolean flag argument $prepend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/Tests/ApcUniversalClassLoaderTest.php">
        <violation beginline="26" endline="28" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setUp uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/Tests/ClassCollectionLoaderTest.php">
        <violation beginline="154" endline="154" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassCollectionLoader' in method 'testFixNamespaceDeclarations'.
        </violation>
        <violation beginline="174" endline="174" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassCollectionLoader' in method 'testFixNamespaceDeclarationsWithoutTokenizer'.
        </violation>
        <violation beginline="175" endline="175" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassCollectionLoader' in method 'testFixNamespaceDeclarationsWithoutTokenizer'.
        </violation>
        <violation beginline="176" endline="176" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassCollectionLoader' in method 'testFixNamespaceDeclarationsWithoutTokenizer'.
        </violation>
        <violation beginline="200" endline="200" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassCollectionLoader' in method 'testUnableToLoadClassException'.
        </violation>
        <violation beginline="214" endline="219" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassCollectionLoader' in method 'testCommentStripping'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/Tests/ClassMapGeneratorTest.php">
        <violation beginline="42" endline="44" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method clean uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="68" endline="68" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassMapGenerator' in method 'testCreateMap'.
        </violation>
        <violation beginline="135" endline="135" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassMapGenerator' in method 'testCreateMapFinderSupport'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/Tests/DebugClassLoaderTest.php">
        <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\DebugClassLoader' in method 'testIdempotence'.
        </violation>
        <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\DebugClassLoader' in method 'testIdempotence'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/UniversalClassLoader.php">
        <violation beginline="236" endline="236" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method register has a boolean flag argument $prepend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="295" endline="317" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method findFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/ClassLoader/XcacheClassLoader.php">
        <violation beginline="78" endline="78" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method register has a boolean flag argument $prepend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="118" endline="120" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method findFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/ConfigCache.php">
        <violation beginline="107" endline="109" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method write uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Definition/ArrayNode.php">
        <violation beginline="341" endline="341" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Config\Definition\Processor' in method 'remapXml'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Definition/Builder/ArrayNodeDefinition.php">
        <violation beginline="192" endline="192" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method useAttributeAsKey has a boolean flag argument $removeKeyItem, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="207" endline="207" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method canBeUnset has a boolean flag argument $allow, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="369" endline="395" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createNode uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Definition/Builder/MergeBuilder.php">
        <violation beginline="44" endline="44" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method allowUnset has a boolean flag argument $allow, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="58" endline="58" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method denyOverwrite has a boolean flag argument $deny, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Definition/Builder/NodeDefinition.php">
        <violation beginline="127" endline="127" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getNode has a boolean flag argument $forceRootNode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="134" endline="134" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Config\Definition\Builder\ExprBuilder' in method 'getNode'.
        </violation>
        <violation beginline="138" endline="138" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Config\Definition\Builder\ExprBuilder' in method 'getNode'.
        </violation>
        <violation beginline="289" endline="289" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method cannotBeOverwritten has a boolean flag argument $deny, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Definition/PrototypedArrayNode.php">
        <violation beginline="82" endline="82" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method setKeyAttribute has a boolean flag argument $remove, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="133" endline="135" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setAddChildrenIfNoneSet uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="284" endline="286" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method normalizeValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Definition/ReferenceDumper.php">
        <violation beginline="83" endline="103" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method writeNode uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="178" endline="180" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method writeArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="184" endline="186" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method writeArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Exception/FileLoaderLoadException.php">
        <violation beginline="31" endline="33" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocator.php">
        <violation beginline="44" endline="44" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method locate has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocatorInterface.php">
        <violation beginline="30" endline="30" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method locate has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Loader/FileLoader.php">
        <violation beginline="64" endline="64" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method import has a boolean flag argument $ignoreErrors, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Tests/Resource/DirectoryResourceTest.php">
        <violation beginline="46" endline="48" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method removeDirectory uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Tests/Util/XmlUtilsTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testLoadFile'.
        </violation>
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testLoadFile'.
        </violation>
        <violation beginline="37" endline="37" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testLoadFile'.
        </violation>
        <violation beginline="44" endline="44" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testLoadFile'.
        </violation>
        <violation beginline="54" endline="54" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testLoadFile'.
        </violation>
        <violation beginline="60" endline="60" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testLoadFile'.
        </violation>
        <violation beginline="66" endline="66" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testConvertDomToArray has a boolean flag argument $root, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="66" endline="66" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testConvertDomToArray has a boolean flag argument $checkPrefix, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="71" endline="71" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testConvertDomToArray'.
        </violation>
        <violation beginline="101" endline="101" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'testPhpize'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Config/Util/XmlUtils.php">
        <violation beginline="79" endline="83" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method loadFile uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="119" endline="119" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method convertDomElementToArray has a boolean flag argument $checkPrefix, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="150" endline="152" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method convertDomElementToArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="162" endline="164" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method convertDomElementToArray uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php">
        <violation beginline="114" endline="116" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method run uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="156" endline="158" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doRun uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="514" endline="516" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method findNamespace uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="600" endline="602" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method find uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="658" endline="660" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getAbbreviations uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="680" endline="680" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method asText has a boolean flag argument $raw, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="704" endline="706" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method asText uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="730" endline="730" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method asXml has a boolean flag argument $asDom, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="742" endline="745" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method asXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php">
        <violation beginline="92" endline="94" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setApplication uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="239" endline="241" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method run uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="278" endline="278" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method mergeApplicationDefinition has a boolean flag argument $mergeArgs, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="308" endline="310" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="597" endline="597" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method asXml has a boolean flag argument $asDom, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Command/HelpCommand.php">
        <violation beginline="79" endline="81" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Command/ListCommand.php">
        <violation beginline="73" endline="75" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method execute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Formatter/OutputFormatter.php">
        <violation beginline="191" endline="197" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method replaceStyle uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="201" endline="203" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method replaceStyle uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="229" endline="231" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createStyleFromString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Helper/DialogHelper.php">
        <violation beginline="42" endline="42" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method select has a boolean flag argument $attempts, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="88" endline="189" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method ask uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="118" endline="120" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method ask uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="158" endline="172" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method ask uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="205" endline="205" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method askConfirmation has a boolean flag argument $default, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="230" endline="230" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method askHiddenResponse has a boolean flag argument $fallback, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="307" endline="307" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method askAndValidate has a boolean flag argument $attempts, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="337" endline="337" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method askHiddenResponseAndValidate has a boolean flag argument $attempts, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="337" endline="337" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method askHiddenResponseAndValidate has a boolean flag argument $fallback, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Helper/FormatterHelper.php">
        <violation beginline="46" endline="46" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method formatBlock has a boolean flag argument $large, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="53" endline="53" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Console\Formatter\OutputFormatter' in method 'formatBlock'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Helper/ProgressHelper.php">
        <violation beginline="224" endline="224" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method advance has a boolean flag argument $redraw, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="246" endline="246" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method display has a boolean flag argument $finish, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="294" endline="297" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initialize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="307" endline="307" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method generate has a boolean flag argument $finish, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="320" endline="326" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method generate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="323" endline="325" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method generate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="373" endline="376" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method humaneTime uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Input/ArgvInput.php">
        <violation beginline="89" endline="91" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="108" endline="110" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseShortOption uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="111" endline="113" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseShortOption uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="136" endline="138" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseShortOptionSet uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="153" endline="155" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseLongOption uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="180" endline="182" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseArgument uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="226" endline="228" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addLongOption uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="241" endline="243" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addLongOption uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="296" endline="296" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getParameterOption has a boolean flag argument $default, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Input/ArrayInput.php">
        <violation beginline="98" endline="98" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getParameterOption has a boolean flag argument $default, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="123" endline="125" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Input/Input.php">
        <violation beginline="43" endline="46" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Input/InputDefinition.php">
        <violation beginline="63" endline="65" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="133" endline="135" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addArgument uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="432" endline="434" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method asText uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="450" endline="452" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method asText uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="480" endline="480" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method asXml has a boolean flag argument $asDom, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Input/InputInterface.php">
        <violation beginline="51" endline="51" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getParameterOption has a boolean flag argument $default, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Input/StringInput.php">
        <violation beginline="75" endline="80" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method tokenize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Output/Output.php">
        <violation beginline="147" endline="147" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method write has a boolean flag argument $newline, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Output/OutputInterface.php">
        <violation beginline="44" endline="44" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method write has a boolean flag argument $newline, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Shell.php">
        <violation beginline="115" endline="117" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method run uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="189" endline="193" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method readline uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Console/Tests/Formatter/OutputFormatterTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Console\Formatter\OutputFormatter' in method 'testLGCharEscaping'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/CssSelector.php">
        <violation beginline="123" endline="125" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSelectorGroup uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="161" endline="163" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSelector uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="191" endline="208" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSimpleSelector uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="204" endline="207" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSimpleSelector uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="255" endline="258" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSimpleSelector uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="265" endline="267" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSimpleSelector uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="270" endline="276" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSimpleSelector uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="302" endline="304" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseAttrib uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Node/AttribNode.php">
        <violation beginline="74" endline="74" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="78" endline="78" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="79" endline="81" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method toXpath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="80" endline="80" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="84" endline="84" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="87" endline="87" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="87" endline="87" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="89" endline="89" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="92" endline="92" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="95" endline="95" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
        <violation beginline="96" endline="98" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method toXpath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Node/ClassNode.php">
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Node/ElementNode.php">
        <violation beginline="70" endline="73" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method toXpath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Node/FunctionNode.php">
        <violation beginline="86" endline="86" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method _xpath_nth_child has a boolean flag argument $last, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="86" endline="86" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method _xpath_nth_child has a boolean flag argument $addNameTest, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="118" endline="120" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method _xpath_nth_child uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="124" endline="126" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method _xpath_nth_child uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="211" endline="211" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method '_xpath_contains'.
        </violation>
        <violation beginline="276" endline="278" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSeries uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="284" endline="286" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseSeries uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Node/HashNode.php">
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'toXpath'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Tests/CssSelectorTest.php">
        <violation beginline="20" endline="20" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\CssSelector' in method 'testCsstoXPath'.
        </violation>
        <violation beginline="21" endline="21" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\CssSelector' in method 'testCsstoXPath'.
        </violation>
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\CssSelector' in method 'testCsstoXPath'.
        </violation>
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\CssSelector' in method 'testCsstoXPath'.
        </violation>
        <violation beginline="25" endline="25" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\CssSelector' in method 'testCsstoXPath'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Tests/XPathExprTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\XPathExpr' in method 'testXpathLiteral'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/Tokenizer.php">
        <violation beginline="49" endline="51" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method tokenize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="163" endline="165" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method unescapeStringLiteral uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/CssSelector/XPathExpr.php">
        <violation beginline="39" endline="39" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $starPrefix, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="133" endline="135" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addCondition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="148" endline="150" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addPrefix uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="165" endline="165" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\CssSelector\XPathExpr' in method 'addNameTest'.
        </violation>
        <violation beginline="182" endline="184" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addStarPrefix uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="227" endline="229" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method xpathLiteral uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="246" endline="249" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method xpathLiteral uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Alias.php">
        <violation beginline="30" endline="30" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $public, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php">
        <violation beginline="41" endline="41" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $onlyConstructorArguments, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Compiler/InlineServiceDefinitionsPass.php">
        <violation beginline="91" endline="93" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method inlineArguments uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Compiler/RemoveUnusedDefinitionsPass.php">
        <violation beginline="63" endline="66" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method process uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Compiler/ResolveInvalidReferencesPass.php">
        <violation beginline="79" endline="79" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method processArguments has a boolean flag argument $inMethodCall, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php">
        <violation beginline="864" endline="866" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="869" endline="873" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php">
        <violation beginline="90" endline="92" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method dump uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="139" endline="141" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addServiceLocalTempVariables uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="204" endline="207" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addServiceInlinedDefinitions uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="297" endline="299" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addServiceInstance uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="439" endline="439" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Container' in method 'addService'.
        </violation>
        <violation beginline="500" endline="512" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="530" endline="530" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Container' in method 'addServiceAlias'.
        </violation>
        <violation beginline="566" endline="568" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="712" endline="715" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addFrozenConstructor uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="828" endline="830" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method exportParameters uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="861" endline="861" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\ContainerBuilder' in method 'wrapServiceConditionals'.
        </violation>
        <violation beginline="963" endline="963" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method hasReference has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="1001" endline="1001" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dumpValue has a boolean flag argument $interpolate, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="1036" endline="1038" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method dumpValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1057" endline="1066" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method dumpValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1069" endline="1071" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method dumpValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1106" endline="1112" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getServiceCall uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php">
        <violation beginline="163" endline="165" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="245" endline="251" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method convertParameters uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="271" endline="273" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method escape uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php">
        <violation beginline="125" endline="127" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="148" endline="150" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addServiceAlias uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="257" endline="257" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method prepareParameters has a boolean flag argument $escape, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="288" endline="290" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method escape uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Exception/ParameterNotFoundException.php">
        <violation beginline="47" endline="49" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateRepr uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Exception/ServiceNotFoundException.php">
        <violation beginline="28" endline="30" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Extension/Extension.php">
        <violation beginline="77" endline="77" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Container' in method 'getAlias'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php">
        <violation beginline="147" endline="149" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="168" endline="176" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="171" endline="173" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="190" endline="190" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\SimpleXMLElement' in method 'parseDefinition'.
        </violation>
        <violation beginline="211" endline="211" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'parseFile'.
        </violation>
        <violation beginline="267" endline="269" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method processAnonymousServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="416" endline="416" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'convertDomElementToArray'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php">
        <violation beginline="140" endline="142" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="191" endline="193" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseDefinition uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="238" endline="238" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'loadFile'.
        </violation>
        <violation beginline="299" endline="302" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method resolveServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="307" endline="309" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method resolveServices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Reference.php">
        <violation beginline="36" endline="36" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $strict, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/SimpleXMLElement.php">
        <violation beginline="43" endline="43" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getArgumentsAsPhp has a boolean flag argument $lowercase, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="74" endline="76" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getArgumentsAsPhp uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="106" endline="106" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'phpize'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php">
        <violation beginline="201" endline="201" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Loader\XmlFileLoader' in method 'testConvertDomElementToArray'.
        </violation>
        <violation beginline="205" endline="205" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Loader\XmlFileLoader' in method 'testConvertDomElementToArray'.
        </violation>
        <violation beginline="209" endline="209" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Loader\XmlFileLoader' in method 'testConvertDomElementToArray'.
        </violation>
        <violation beginline="213" endline="213" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Loader\XmlFileLoader' in method 'testConvertDomElementToArray'.
        </violation>
        <violation beginline="217" endline="217" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Loader\XmlFileLoader' in method 'testConvertDomElementToArray'.
        </violation>
        <violation beginline="221" endline="221" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Loader\XmlFileLoader' in method 'testConvertDomElementToArray'.
        </violation>
        <violation beginline="225" endline="225" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Loader\XmlFileLoader' in method 'testConvertDomElementToArray'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DomCrawler/Crawler.php">
        <violation beginline="107" endline="109" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addContent uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="239" endline="241" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addNode uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="501" endline="503" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method extract uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="555" endline="555" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\CssSelector\CssSelector' in method 'filter'.
        </violation>
        <violation beginline="698" endline="701" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method xpathLiteral uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DomCrawler/Field/ChoiceFormField.php">
        <violation beginline="128" endline="152" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="149" endline="151" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="225" endline="252" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initialize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="241" endline="243" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initialize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DomCrawler/Field/FileFormField.php">
        <violation beginline="75" endline="80" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DomCrawler/Form.php">
        <violation beginline="383" endline="385" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initialize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/DomCrawler/FormFieldRegistry.php">
        <violation beginline="44" endline="46" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method add uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="129" endline="134" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method set uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="182" endline="184" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method walk uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/ContainerAwareEventDispatcher.php">
        <violation beginline="127" endline="129" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getListeners uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="147" endline="151" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addSubscriberService uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/EventDispatcher.php">
        <violation beginline="127" endline="131" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addSubscriber uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="145" endline="147" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method removeSubscriber uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php">
        <violation beginline="36" endline="36" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method copy has a boolean flag argument $override, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="42" endline="44" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method copy uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="136" endline="147" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method remove uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="142" endline="146" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method remove uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="161" endline="161" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method chmod has a boolean flag argument $recursive, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="182" endline="182" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method chown has a boolean flag argument $recursive, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="192" endline="196" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method chown uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="209" endline="209" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method chgrp has a boolean flag argument $recursive, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="219" endline="223" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method chgrp uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="257" endline="257" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method symlink has a boolean flag argument $copyOnWindows, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="271" endline="273" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method symlink uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="381" endline="383" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method mirror uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="384" endline="394" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method mirror uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="391" endline="393" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method mirror uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Tests/FilesystemTest.php">
        <violation beginline="73" endline="75" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method clean uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Adapter/AbstractFindAdapter.php">
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Shell\Command' in method 'searchInDirectory'.
        </violation>
        <violation beginline="145" endline="145" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method buildNamesFiltering has a boolean flag argument $not, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="154" endline="154" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Expression\Expression' in method 'buildNamesFiltering'.
        </violation>
        <violation beginline="158" endline="158" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Expression\Expression' in method 'buildNamesFiltering'.
        </violation>
        <violation beginline="193" endline="193" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method buildPathsFiltering has a boolean flag argument $not, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="202" endline="202" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Expression\Expression' in method 'buildPathsFiltering'.
        </violation>
        <violation beginline="206" endline="206" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Expression\Expression' in method 'buildPathsFiltering'.
        </violation>
        <violation beginline="213" endline="215" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildPathsFiltering uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="318" endline="318" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method buildContentFiltering has a boolean flag argument $not, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Adapter/BsdFindAdapter.php">
        <violation beginline="87" endline="87" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method buildContentFiltering has a boolean flag argument $not, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="90" endline="90" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Expression\Expression' in method 'buildContentFiltering'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Adapter/GnuFindAdapter.php">
        <violation beginline="89" endline="89" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method buildContentFiltering has a boolean flag argument $not, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="92" endline="92" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Expression\Expression' in method 'buildContentFiltering'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Expression/Expression.php">
        <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Finder\Expression\Regex' in method '__construct'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Expression/Glob.php">
        <violation beginline="101" endline="101" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method toRegex has a boolean flag argument $strictLeadingDot, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="101" endline="101" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method toRegex has a boolean flag argument $strictWildcardSlash, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="144" endline="146" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method toRegex uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="149" endline="151" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method toRegex uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Finder.php">
        <violation beginline="429" endline="431" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method ignoreDotFiles uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="451" endline="453" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method ignoreVCS uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="649" endline="651" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method in uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="713" endline="715" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method append uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Glob.php">
        <violation beginline="47" endline="47" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method toRegex has a boolean flag argument $strictLeadingDot, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="47" endline="47" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method toRegex has a boolean flag argument $strictWildcardSlash, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="90" endline="92" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method toRegex uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="95" endline="97" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method toRegex uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Iterator/FilePathsIterator.php">
        <violation beginline="125" endline="127" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildProperties uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Iterator/SortableIterator.php">
        <violation beginline="70" endline="72" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Tests/FinderTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Finder\Finder' in method 'testCreate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Tests/Iterator/MockSplFileInfo.php">
        <violation beginline="46" endline="48" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="110" endline="112" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setType uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Finder/Tests/Iterator/RealIteratorTestCase.php">
        <violation beginline="42" endline="44" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setUpBeforeClass uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="49" endline="51" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setUpBeforeClass uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="66" endline="68" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method tearDownAfterClass uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/ChoiceList/ChoiceList.php">
        <violation beginline="280" endline="288" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addChoices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="347" endline="347" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Form\FormConfigBuilder' in method 'addChoice'.
        </violation>
        <violation beginline="364" endline="366" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addChoice uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/ChoiceList/ObjectChoiceList.php">
        <violation beginline="89" endline="89" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method '__construct'.
        </violation>
        <violation beginline="129" endline="135" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initialize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="178" endline="180" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method extractLabels uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/ChoiceList/SimpleChoiceList.php">
        <violation beginline="105" endline="113" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addChoices uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/CoreExtension.php">
        <violation beginline="28" endline="28" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method 'loadTypes'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataMapper/PropertyPathMapper.php">
        <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method '__construct'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/ArrayToPartsTransformer.php">
        <violation beginline="45" endline="47" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method transform uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="69" endline="71" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method reverseTransform uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/ChoiceToBooleanArrayTransformer.php">
        <violation beginline="100" endline="102" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method reverseTransform uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/ChoicesToBooleanArrayTransformer.php">
        <violation beginline="105" endline="107" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method reverseTransform uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/DateTimeToArrayTransformer.php">
        <violation beginline="39" endline="39" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $pad, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/DateTimeToLocalizedStringTransformer.php">
        <violation beginline="160" endline="160" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'getIntlDateFormatter'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/DateTimeToStringTransformer.php">
        <violation beginline="142" endline="142" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'reverseTransform'.
        </violation>
        <violation beginline="144" endline="144" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'reverseTransform'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/NumberToLocalizedStringTransformer.php">
        <violation beginline="159" endline="159" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'getNumberFormatter'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/PercentToLocalizedStringTransformer.php">
        <violation beginline="143" endline="143" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'getNumberFormatter'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/DataTransformer/ValueToDuplicatesTransformer.php">
        <violation beginline="74" endline="76" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method reverseTransform uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/EventListener/MergeCollectionListener.php">
        <violation beginline="44" endline="44" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $allowAdd, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="44" endline="44" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $allowDelete, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="86" endline="122" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method onBind uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="117" endline="119" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method onBind uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/EventListener/ResizeFormListener.php">
        <violation beginline="48" endline="48" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $allowAdd, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="48" endline="48" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $allowDelete, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/EventListener/TrimListener.php">
        <violation beginline="35" endline="37" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method preBind uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/ChoiceType.php">
        <violation beginline="56" endline="61" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="62" endline="68" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="65" endline="67" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="99" endline="103" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildView uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="243" endline="260" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addSubForms uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="255" endline="257" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addSubForms uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/CountryType.php">
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'setDefaultOptions'.
        </violation>
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setDefaultOptions'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/DateTimeType.php">
        <violation beginline="101" endline="110" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="111" endline="159" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/DateType.php">
        <violation beginline="67" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="73" endline="73" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'buildForm'.
        </violation>
        <violation beginline="149" endline="152" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method finishView uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="273" endline="275" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method formatTimestamps uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="291" endline="293" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method formatTimestamps uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/FormType.php">
        <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method '__construct'.
        </violation>
        <violation beginline="87" endline="91" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildView uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="101" endline="110" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildView uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/LanguageType.php">
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'setDefaultOptions'.
        </violation>
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setDefaultOptions'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/LocaleType.php">
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'setDefaultOptions'.
        </violation>
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setDefaultOptions'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/MoneyType.php">
        <violation beginline="90" endline="90" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'getPattern'.
        </violation>
        <violation beginline="112" endline="114" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getPattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/TimeType.php">
        <violation beginline="52" endline="113" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildForm uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/TimezoneType.php">
        <violation beginline="66" endline="66" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTimeZone' in method 'getTimezones'.
        </violation>
        <violation beginline="75" endline="78" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getTimezones uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php">
        <violation beginline="31" endline="31" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $defaultEnabled, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/HttpFoundation/EventListener/BindRequestListener.php">
        <violation beginline="56" endline="59" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method preBind uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="63" endline="65" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method preBind uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/Constraints/FormValidator.php">
        <violation beginline="76" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/ValidatorTypeGuesser.php">
        <violation beginline="292" endline="292" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Form\Guess\Guess' in method 'guess'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapper.php">
        <violation beginline="36" endline="36" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method mapViolation has a boolean flag argument $allowNonSynchronized, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="178" endline="180" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method matchChild uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="267" endline="279" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method reconstructPath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapperInterface.php">
        <violation beginline="32" endline="32" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method mapViolation has a boolean flag argument $allowNonSynchronized, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationPath.php">
        <violation beginline="88" endline="92" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="93" endline="99" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="239" endline="241" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Form.php">
        <violation beginline="390" endline="390" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Form\Util\FormUtil' in method 'setData'.
        </violation>
        <violation beginline="566" endline="569" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method bind uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="571" endline="571" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Form\Util\FormUtil' in method 'bind'.
        </violation>
        <violation beginline="668" endline="670" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addError uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="717" endline="717" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Form\Util\FormUtil' in method 'isEmpty'.
        </violation>
        <violation beginline="791" endline="793" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getErrorsAsString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="910" endline="912" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method add uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/FormConfigBuilder.php">
        <violation beginline="217" endline="217" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method addViewTransformer has a boolean flag argument $forcePrepend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="225" endline="227" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addViewTransformer uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="315" endline="315" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method addModelTransformer has a boolean flag argument $forceAppend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="323" endline="325" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addModelTransformer uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/FormConfigBuilderInterface.php">
        <violation beginline="67" endline="67" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method addViewTransformer has a boolean flag argument $forcePrepend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="89" endline="89" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method addModelTransformer has a boolean flag argument $forceAppend, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/FormFactoryBuilder.php">
        <violation beginline="150" endline="152" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getFormFactory uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/FormRenderer.php">
        <violation beginline="181" endline="189" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method searchAndRenderBlock uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="199" endline="204" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method searchAndRenderBlock uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeGuesserChain.php">
        <violation beginline="37" endline="39" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="114" endline="114" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Form\Guess\Guess' in method 'guess'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/ResolvedFormType.php">
        <violation beginline="240" endline="242" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getOptionsResolver uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Test/DeprecationErrorHandler.php">
        <violation beginline="13" endline="13" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'handle'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/AbstractLayoutTest.php">
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/DataMapper/PropertyPathMapperTest.php">
        <violation beginline="67" endline="67" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getForm has a boolean flag argument $synchronized, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/DataTransformer/DateTimeToLocalizedStringTransformerTest.php">
        <violation beginline="25" endline="25" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
        <violation beginline="37" endline="37" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method assertEquals has a boolean flag argument $canonicalize, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="37" endline="37" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method assertEquals has a boolean flag argument $ignoreCase, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="117" endline="117" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testTransformToDifferentLocale'.
        </violation>
        <violation beginline="202" endline="202" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testReverseTransformFromDifferentLocale'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/DataTransformer/DateTimeToRfc3339TransformerTest.php">
        <violation beginline="35" endline="35" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method assertEquals has a boolean flag argument $canonicalize, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="35" endline="35" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method assertEquals has a boolean flag argument $ignoreCase, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="99" endline="101" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testReverseTransform uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/DataTransformer/IntegerToLocalizedStringTransformerTest.php">
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/DataTransformer/MoneyToLocalizedStringTransformerTest.php">
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/DataTransformer/NumberToLocalizedStringTransformerTest.php">
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
        <violation beginline="103" endline="103" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testDecimalSeparatorMayBeDotIfGroupingSeparatorIsNotDot'.
        </violation>
        <violation beginline="145" endline="145" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testDecimalSeparatorMayBeDotIfGroupingSeparatorIsDotButNoGroupingUsed'.
        </violation>
        <violation beginline="158" endline="158" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testDecimalSeparatorMayBeCommaIfGroupingSeparatorIsNotComma'.
        </violation>
        <violation beginline="179" endline="179" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testDecimalSeparatorMayNotBeCommaIfGroupingSeparatorIsComma'.
        </violation>
        <violation beginline="194" endline="194" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testDecimalSeparatorMayNotBeCommaIfGroupingSeparatorIsCommaWithNoGroupSep'.
        </violation>
        <violation beginline="202" endline="202" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testDecimalSeparatorMayBeCommaIfGroupingSeparatorIsCommaButNoGroupingUsed'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/DataTransformer/PercentToLocalizedStringTransformerTest.php">
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/Type/CountryTypeTest.php">
        <violation beginline="20" endline="20" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testCountriesAreSelectable'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/Type/DateTypeTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/Type/LanguageTypeTest.php">
        <violation beginline="20" endline="20" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testCountriesAreSelectable'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/Type/LocaleTypeTest.php">
        <violation beginline="20" endline="20" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testLocalesAreSelectable'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/Type/MoneyTypeTest.php">
        <violation beginline="18" endline="18" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testPassMoneyPatternToView'.
        </violation>
        <violation beginline="28" endline="28" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testMoneyPatternWorksForYen'.
        </violation>
        <violation beginline="38" endline="38" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testPassDifferentPatternsForDifferentCurrencies'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Core/Type/NumberTypeTest.php">
        <violation beginline="20" endline="20" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Validator/Constraints/FormValidatorTest.php">
        <violation beginline="480" endline="483" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testPostMaxSizeViolation uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Extension/Validator/ViolationMapper/ViolationMapperTest.php">
        <violation beginline="74" endline="74" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getForm has a boolean flag argument $virtual, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="74" endline="74" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getForm has a boolean flag argument $synchronized, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="781" endline="785" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testDefaultErrorMapping uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1253" endline="1257" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testCustomDataErrorMapping uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1441" endline="1446" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testCustomFormErrorMapping uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1497" endline="1501" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testVirtualFormErrorMapping uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Fixtures/CustomArrayObject.php">
        <violation beginline="41" endline="43" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method offsetSet uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/FormPerformanceTestCase.php">
        <violation beginline="57" endline="59" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setMaxRunningTime uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/Guess/GuessTest.php">
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Form\Guess\Guess' in method 'testGetBestGuessReturnsGuessWithHighestConfidence'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Tests/ResolvedFormTypeTest.php">
        <violation beginline="57" endline="57" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Runner_Version' in method 'testCreateBuilder'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Util/FormUtil.php">
        <violation beginline="36" endline="36" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\StringUtil' in method 'singularify'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/Util/PropertyPath.php">
        <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method 'getValue'.
        </violation>
        <violation beginline="53" endline="53" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\PropertyAccess' in method 'setValue'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/AcceptHeader.php">
        <violation beginline="58" endline="58" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\HttpFoundation\AcceptHeaderItem' in method 'fromString'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/AcceptHeaderItem.php">
        <violation beginline="75" endline="78" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method fromString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="220" endline="222" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setAttribute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/BinaryFileResponse.php">
        <violation beginline="45" endline="45" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $public, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="45" endline="45" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $autoEtag, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="45" endline="45" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $autoLastModified, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="59" endline="59" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method create has a boolean flag argument $public, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="59" endline="59" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method create has a boolean flag argument $autoEtag, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="59" endline="59" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method create has a boolean flag argument $autoLastModified, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="76" endline="76" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method setFile has a boolean flag argument $autoEtag, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="76" endline="76" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method setFile has a boolean flag argument $autoLastModified, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="116" endline="116" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'setAutoLastModified'.
        </violation>
        <violation beginline="207" endline="209" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method prepare uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Cookie.php">
        <violation beginline="46" endline="46" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $secure, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="46" endline="46" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $httpOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="88" endline="94" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __toString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/File/File.php">
        <violation beginline="38" endline="38" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $checkPath, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="59" endline="59" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser' in method 'guessExtension'.
        </violation>
        <violation beginline="77" endline="77" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser' in method 'getMimeType'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/File/MimeType/MimeTypeGuesser.php">
        <violation beginline="68" endline="68" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\HttpFoundation\File\MimeType\FileBinaryMimeTypeGuesser' in method '__construct'.
        </violation>
        <violation beginline="72" endline="72" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\HttpFoundation\File\MimeType\FileinfoMimeTypeGuesser' in method '__construct'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/File/UploadedFile.php">
        <violation beginline="91" endline="91" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $test, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/FileBag.php">
        <violation beginline="98" endline="100" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method convertFileInformation uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="101" endline="103" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method convertFileInformation uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/HeaderBag.php">
        <violation beginline="128" endline="128" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method get has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="156" endline="156" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method set has a boolean flag argument $replace, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="164" endline="166" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method set uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="238" endline="238" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'getDate'.
        </violation>
        <violation beginline="245" endline="245" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method addCacheControlDirective has a boolean flag argument $value, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="296" endline="302" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getCacheControlHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/IpUtils.php">
        <violation beginline="59" endline="62" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method checkIp4 uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="92" endline="95" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method checkIp6 uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/ParameterBag.php">
        <violation beginline="103" endline="103" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method get has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="136" endline="142" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method get uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="202" endline="202" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getAlpha has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="218" endline="218" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getAlnum has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="234" endline="234" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getDigits has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="251" endline="251" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getInt has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="269" endline="269" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method filter has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Request.php">
        <violation beginline="301" endline="304" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method create uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="451" endline="453" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method overrideGlobals uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="630" endline="630" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method get has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="1290" endline="1290" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getContent has a boolean flag argument $asResource, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="1389" endline="1397" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getLanguages uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1393" endline="1395" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getLanguages uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1541" endline="1556" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method prepareBaseUrl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1607" endline="1609" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method prepareBasePath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1678" endline="1678" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'setPhpDefaultLocale'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/RequestMatcher.php">
        <violation beginline="146" endline="146" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\HttpFoundation\IpUtils' in method 'matches'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Response.php">
        <violation beginline="665" endline="665" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'getExpires'.
        </violation>
        <violation beginline="684" endline="688" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setExpires uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="844" endline="848" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setLastModified uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="875" endline="875" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method setEtag has a boolean flag argument $weak, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="879" endline="885" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setEtag uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="928" endline="930" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setCache uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="936" endline="938" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setCache uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1007" endline="1007" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method setVary has a boolean flag argument $replace, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/ResponseHeaderBag.php">
        <violation beginline="106" endline="106" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method set has a boolean flag argument $replace, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/ServerBag.php">
        <violation beginline="44" endline="73" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getHeaders uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Attribute/NamespacedAttributeBag.php">
        <violation beginline="99" endline="99" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method resolveAttributePath has a boolean flag argument $writeContext, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Session.php">
        <violation beginline="174" endline="174" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method migrate has a boolean flag argument $destroy, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="271" endline="273" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getFlashes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/SessionInterface.php">
        <violation beginline="101" endline="101" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method migrate has a boolean flag argument $destroy, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/PdoSessionHandler.php">
        <violation beginline="193" endline="205" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method write uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/MetadataBag.php">
        <violation beginline="72" endline="74" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initialize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/MockArraySessionStorage.php">
        <violation beginline="109" endline="109" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method regenerate has a boolean flag argument $destroy, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/MockFileSessionStorage.php">
        <violation beginline="82" endline="82" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method regenerate has a boolean flag argument $destroy, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php">
        <violation beginline="105" endline="107" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="198" endline="198" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method regenerate has a boolean flag argument $destroy, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="360" endline="369" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setSaveHandler uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php">
        <violation beginline="104" endline="104" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method regenerate has a boolean flag argument $destroy, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/AcceptHeaderItemTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\AcceptHeaderItem' in method 'testFromString'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/AcceptHeaderTest.php">
        <violation beginline="21" endline="21" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\AcceptHeader' in method 'testFirst'.
        </violation>
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\AcceptHeader' in method 'testFromString'.
        </violation>
        <violation beginline="90" endline="90" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\AcceptHeader' in method 'testSorting'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/BinaryFileResponseTest.php">
        <violation beginline="29" endline="29" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\BinaryFileResponse' in method 'testConstruction'.
        </violation>
        <violation beginline="58" endline="58" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRequests'.
        </violation>
        <violation beginline="63" endline="63" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRequests'.
        </violation>
        <violation beginline="98" endline="98" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testXSendfile'.
        </violation>
        <violation beginline="101" endline="101" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\BinaryFileResponse' in method 'testXSendfile'.
        </violation>
        <violation beginline="102" endline="102" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\BinaryFileResponse' in method 'testXSendfile'.
        </violation>
        <violation beginline="116" endline="116" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testXAccelMapping'.
        </violation>
        <violation beginline="130" endline="130" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\BinaryFileResponse' in method 'testXAccelMapping'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/File/MimeType/MimeTypeTest.php">
        <violation beginline="28" endline="30" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGuessImageWithoutExtension uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="42" endline="42" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser' in method 'testGuessImageWithFileBinaryMimeTypeGuesser'.
        </violation>
        <violation beginline="46" endline="48" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGuessImageWithFileBinaryMimeTypeGuesser uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="55" endline="57" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGuessImageWithKnownExtension uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="64" endline="66" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGuessFileWithUnknownExtension uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="92" endline="94" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGuessWithNonReadablePath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/IpUtilsTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\IpUtils' in method 'testIpv4'.
        </violation>
        <violation beginline="46" endline="46" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\IpUtils' in method 'testIpv6'.
        </violation>
        <violation beginline="69" endline="69" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\IpUtils' in method 'testAnIpv6WithOptionDisabledIpv6'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/JsonResponseTest.php">
        <violation beginline="80" endline="80" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testCreate'.
        </violation>
        <violation beginline="89" endline="89" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateEmptyJsonObject'.
        </violation>
        <violation beginline="96" endline="96" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateJsonArray'.
        </violation>
        <violation beginline="103" endline="103" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateJsonObject'.
        </violation>
        <violation beginline="110" endline="110" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateWithSimpleTypes'.
        </violation>
        <violation beginline="114" endline="114" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateWithSimpleTypes'.
        </violation>
        <violation beginline="118" endline="118" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateWithSimpleTypes'.
        </violation>
        <violation beginline="122" endline="122" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateWithSimpleTypes'.
        </violation>
        <violation beginline="129" endline="129" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateWithCustomStatus'.
        </violation>
        <violation beginline="135" endline="135" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateAddsContentTypeHeader'.
        </violation>
        <violation beginline="141" endline="141" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateWithCustomHeaders'.
        </violation>
        <violation beginline="150" endline="150" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\JsonResponse' in method 'testStaticCreateWithCustomContentType'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/RedirectResponseTest.php">
        <violation beginline="78" endline="78" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\RedirectResponse' in method 'testCreate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/RequestMatcherTest.php">
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testMethod'.
        </violation>
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testMethod'.
        </violation>
        <violation beginline="52" endline="52" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHost'.
        </violation>
        <violation beginline="78" endline="78" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPath'.
        </violation>
        <violation beginline="96" endline="96" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPathWithLocaleIsNotSupported'.
        </violation>
        <violation beginline="106" endline="106" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPathWithEncodedCharacters'.
        </violation>
        <violation beginline="115" endline="115" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testAttributes'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/RequestTest.php">
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
        <violation beginline="67" endline="67" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetUser'.
        </violation>
        <violation beginline="75" endline="75" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetPassword'.
        </violation>
        <violation beginline="111" endline="111" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="119" endline="119" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="127" endline="127" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="135" endline="135" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="143" endline="143" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="151" endline="151" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="159" endline="159" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="167" endline="167" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="176" endline="176" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="180" endline="180" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="188" endline="188" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="196" endline="196" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="204" endline="204" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="214" endline="214" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreate'.
        </violation>
        <violation beginline="231" endline="239" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreateCheckPrecedence'.
        </violation>
        <violation beginline="249" endline="253" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreateCheckPrecedence'.
        </violation>
        <violation beginline="458" endline="458" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetUriForPath'.
        </violation>
        <violation beginline="461" endline="461" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetUriForPath'.
        </violation>
        <violation beginline="464" endline="464" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetUriForPath'.
        </violation>
        <violation beginline="467" endline="467" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetUriForPath'.
        </violation>
        <violation beginline="718" endline="718" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetSetMethod'.
        </violation>
        <violation beginline="720" endline="720" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetSetMethod'.
        </violation>
        <violation beginline="722" endline="722" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetSetMethod'.
        </violation>
        <violation beginline="735" endline="735" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetSetMethod'.
        </violation>
        <violation beginline="763" endline="763" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetClientIp'.
        </violation>
        <violation beginline="774" endline="774" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetClientIp'.
        </violation>
        <violation beginline="854" endline="854" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreateFromGlobals'.
        </violation>
        <violation beginline="865" endline="865" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\HttpFoundation\Tests\RequestContentProxy' in method 'testCreateFromGlobals'.
        </violation>
        <violation beginline="871" endline="871" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreateFromGlobals'.
        </violation>
        <violation beginline="872" endline="872" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreateFromGlobals'.
        </violation>
        <violation beginline="876" endline="876" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCreateFromGlobals'.
        </violation>
        <violation beginline="909" endline="909" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testOverrideGlobals'.
        </violation>
        <violation beginline="911" endline="911" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testOverrideGlobals'.
        </violation>
        <violation beginline="1048" endline="1048" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testIntlLocale'.
        </violation>
        <violation beginline="1052" endline="1052" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testIntlLocale'.
        </violation>
        <violation beginline="1056" endline="1056" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Locale' in method 'testIntlLocale'.
        </violation>
        <violation beginline="1213" endline="1213" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'startTrustingProxyData'.
        </violation>
        <violation beginline="1221" endline="1221" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetBaseUrl'.
        </violation>
        <violation beginline="1328" endline="1328" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1347" endline="1347" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1355" endline="1355" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1362" endline="1362" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1369" endline="1369" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1370" endline="1370" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1371" endline="1371" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1372" endline="1372" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1379" endline="1379" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1380" endline="1380" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1381" endline="1381" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1382" endline="1382" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1389" endline="1389" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTrustedProxies'.
        </violation>
        <violation beginline="1395" endline="1395" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getContent has a boolean flag argument $asResource, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/ResponseTest.php">
        <violation beginline="21" endline="21" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Response' in method 'testCreate'.
        </violation>
        <violation beginline="420" endline="420" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPrepareSetContentType'.
        </violation>
        <violation beginline="431" endline="431" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPrepareRemovesContentForHeadRequests'.
        </violation>
        <violation beginline="440" endline="440" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPrepareSetsPragmaOnHttp10Only'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/Session/SessionTest.php">
        <violation beginline="56" endline="56" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/NativeFileSessionHandlerTest.php">
        <violation beginline="33" endline="36" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testConstruct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/NativeSessionHandlerTest.php">
        <violation beginline="34" endline="37" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testConstruct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/PdoSessionHandlerTest.php">
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Tests/StreamedResponseTest.php">
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPrepareWith11Protocol'.
        </violation>
        <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPrepareWith10Protocol'.
        </violation>
        <violation beginline="56" endline="56" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testPrepareWithHeadRequest'.
        </violation>
        <violation beginline="109" endline="109" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\StreamedResponse' in method 'testCreate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php">
        <violation beginline="82" endline="82" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\DependencyInjection\Container' in method 'getContainerExtension'.
        </violation>
        <violation beginline="93" endline="95" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getContainerExtension uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Client.php">
        <violation beginline="109" endline="109" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'filterRequest'.
        </violation>
        <violation beginline="138" endline="138" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\UploadedFile' in method 'filterFiles'.
        </violation>
        <violation beginline="147" endline="156" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method filterFiles uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="157" endline="159" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method filterFiles uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Config/FileLocator.php">
        <violation beginline="46" endline="46" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method locate has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ControllerResolver.php">
        <violation beginline="107" endline="109" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getArguments uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="125" endline="135" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doGetArguments uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="130" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doGetArguments uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/DataCollector/ExceptionDataCollector.php">
        <violation beginline="32" endline="32" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'collect'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/DataCollector/RequestDataCollector.php">
        <violation beginline="134" endline="136" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method collect uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="282" endline="287" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getCookieHeader uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Debug/ExceptionHandler.php">
        <violation beginline="37" endline="37" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $debug, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="50" endline="50" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method register has a boolean flag argument $debug, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="79" endline="79" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'createResponse'.
        </violation>
        <violation beginline="129" endline="131" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getContent uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="142" endline="144" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getContent uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="274" endline="276" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method formatArgs uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/DependencyInjection/ContainerAwareHttpKernel.php">
        <violation beginline="49" endline="49" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/DeprecationLoggerListener.php">
        <violation beginline="36" endline="36" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'injectLogger'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/ExceptionListener.php">
        <violation beginline="56" endline="56" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'onKernelException'.
        </violation>
        <violation beginline="95" endline="95" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method logException has a boolean flag argument $original, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="101" endline="103" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method logException uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/FragmentListener.php">
        <violation beginline="84" endline="84" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\IpUtils' in method 'validateRequest'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/ProfilerListener.php">
        <violation beginline="48" endline="48" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $onlyException, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="48" endline="48" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $onlyMasterRequests, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/RouterListener.php">
        <violation beginline="79" endline="81" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method onKernelRequest uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Exception/FlattenException.php">
        <violation beginline="197" endline="199" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setTraceFromException uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="249" endline="251" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method flattenArgs uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="261" endline="263" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method flattenArgs uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Fragment/FragmentHandler.php">
        <violation beginline="45" endline="45" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $debug, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Fragment/HIncludeFragmentRenderer.php">
        <violation beginline="92" endline="94" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method render uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpCache/Esi.php">
        <violation beginline="123" endline="123" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method renderIncludeTag has a boolean flag argument $ignoreErrors, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="197" endline="197" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'handle'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpCache/EsiResponseCacheStrategy.php">
        <violation beginline="44" endline="47" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method add uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.php">
        <violation beginline="172" endline="172" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="193" endline="195" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method handle uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="240" endline="240" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method pass has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="259" endline="259" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method invalidate has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="297" endline="297" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method lookup has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="349" endline="349" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="389" endline="391" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="410" endline="410" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method fetch has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="445" endline="445" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method forward has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="455" endline="457" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method forward uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="550" endline="555" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method lock uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="615" endline="617" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method restoreResponseBody uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="626" endline="628" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method restoreResponseBody uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpCache/Store.php">
        <violation beginline="239" endline="241" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method invalidate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="315" endline="315" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'purge'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php">
        <violation beginline="70" endline="70" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="210" endline="212" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method handleException uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernelInterface.php">
        <violation beginline="46" endline="46" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Kernel.php">
        <violation beginline="104" endline="104" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\DebugClassLoader' in method 'init'.
        </violation>
        <violation beginline="105" endline="105" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'init'.
        </violation>
        <violation beginline="107" endline="107" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ExceptionHandler' in method 'init'.
        </violation>
        <violation beginline="108" endline="110" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method init uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="191" endline="191" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="241" endline="241" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getBundle has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="285" endline="285" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method locateResource has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="407" endline="407" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\ClassLoader\ClassCollectionLoader' in method 'loadClassCache'.
        </violation>
        <violation beginline="492" endline="494" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initializeBundles uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/KernelInterface.php">
        <violation beginline="96" endline="96" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getBundle has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="126" endline="126" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method locateResource has a boolean flag argument $first, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Profiler/FileProfilerStorage.php">
        <violation beginline="114" endline="116" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method purge uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Profiler/MongoDbProfilerStorage.php">
        <violation beginline="111" endline="113" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getMongo uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Profiler/MysqlProfilerStorage.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'initDb'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Profiler/PdoProfilerStorage.php">
        <violation beginline="104" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method write uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Profiler/Profiler.php">
        <violation beginline="178" endline="180" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method find uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="185" endline="187" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method find uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Profiler/SqliteProfilerStorage.php">
        <violation beginline="36" endline="36" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'initDb'.
        </violation>
        <violation beginline="38" endline="40" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method initDb uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="70" endline="72" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method exec uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="90" endline="92" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method fetch uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Controller/ControllerResolverTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetController'.
        </violation>
        <violation beginline="92" endline="92" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="96" endline="96" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="101" endline="101" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="109" endline="109" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="114" endline="114" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="119" endline="119" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="126" endline="126" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="132" endline="132" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
        <violation beginline="139" endline="146" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGetArguments uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="148" endline="148" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGetArguments'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/DataCollector/ConfigDataCollectorTest.php">
        <violation beginline="47" endline="49" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testCollect uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="60" endline="62" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testCollect uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/DataCollector/ExceptionDataCollectorTest.php">
        <violation beginline="32" endline="32" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testCollect'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/DataCollector/RequestDataCollectorTest.php">
        <violation beginline="152" endline="152" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'provider'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Debug/ErrorHandlerTest.php">
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'testConstruct'.
        </violation>
        <violation beginline="38" endline="38" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'testHandle'.
        </violation>
        <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'testHandle'.
        </violation>
        <violation beginline="48" endline="48" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'testHandle'.
        </violation>
        <violation beginline="60" endline="60" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'testHandle'.
        </violation>
        <violation beginline="65" endline="65" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'testHandle'.
        </violation>
        <violation beginline="87" endline="87" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Debug\ErrorHandler' in method 'testHandle'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Debug/TraceableEventDispatcherTest.php">
        <violation beginline="166" endline="166" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testStopwatchSections'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/EventListener/ExceptionListenerTest.php">
        <violation beginline="126" endline="126" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="134" endline="134" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/EventListener/FragmentListenerTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testOnlyTriggeredOnFragmentRoute'.
        </violation>
        <violation beginline="49" endline="49" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testAccessDeniedWithNonSafeMethods'.
        </violation>
        <violation beginline="62" endline="62" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testAccessDeniedWithNonLocalIps'.
        </violation>
        <violation beginline="75" endline="75" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testAccessDeniedWithWrongSignature'.
        </violation>
        <violation beginline="86" endline="86" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testWithSignature'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/EventListener/LocaleListenerTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testDefaultLocaleWithoutSession'.
        </violation>
        <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testLocaleFromRequestAttribute'.
        </violation>
        <violation beginline="64" endline="64" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testLocaleSetForRoutingContext'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/EventListener/ResponseListenerTest.php">
        <violation beginline="65" endline="65" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testFilterSetsNonDefaultCharsetIfNotOverridden'.
        </violation>
        <violation beginline="79" endline="79" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testFilterDoesNothingIfCharsetIsOverridden'.
        </violation>
        <violation beginline="91" endline="91" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testFiltersSetsNonDefaultCharsetIfNotOverriddenOnNonTextContentType'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/EventListener/RouterListenerTest.php">
        <violation beginline="75" endline="75" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'createGetResponseEventForUri'.
        </violation>
        <violation beginline="92" endline="92" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRequestMatcher'.
        </violation>
        <violation beginline="108" endline="108" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testSubRequestWithDifferentMethod'.
        </violation>
        <violation beginline="127" endline="127" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testSubRequestWithDifferentMethod'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Exception/FlattenExceptionTest.php">
        <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="37" endline="37" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="40" endline="40" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="46" endline="46" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="49" endline="49" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="52" endline="52" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="58" endline="58" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="61" endline="61" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="64" endline="64" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="67" endline="67" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="70" endline="70" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="73" endline="73" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="76" endline="76" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="79" endline="79" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testStatusCode'.
        </violation>
        <violation beginline="85" endline="85" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testHeadersForHttpException'.
        </violation>
        <violation beginline="88" endline="88" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testHeadersForHttpException'.
        </violation>
        <violation beginline="91" endline="91" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testHeadersForHttpException'.
        </violation>
        <violation beginline="94" endline="94" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testHeadersForHttpException'.
        </violation>
        <violation beginline="97" endline="97" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testHeadersForHttpException'.
        </violation>
        <violation beginline="100" endline="100" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testHeadersForHttpException'.
        </violation>
        <violation beginline="109" endline="109" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testFlattenHttpException'.
        </violation>
        <violation beginline="110" endline="110" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testFlattenHttpException'.
        </violation>
        <violation beginline="125" endline="125" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testPrevious'.
        </violation>
        <violation beginline="126" endline="126" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testPrevious'.
        </violation>
        <violation beginline="140" endline="140" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testLine'.
        </violation>
        <violation beginline="149" endline="149" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testFile'.
        </violation>
        <violation beginline="158" endline="158" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testToArray'.
        </violation>
        <violation beginline="185" endline="185" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testRecursionInArguments'.
        </violation>
        <violation beginline="197" endline="197" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Exception\FlattenException' in method 'testSetTraceIncompleteClass'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Fragment/EsiFragmentRendererTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderFallbackToInlineStrategyIfNoRequest'.
        </violation>
        <violation beginline="37" endline="37" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderFallbackToInlineStrategyIfEsiNotSupported'.
        </violation>
        <violation beginline="44" endline="44" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRender'.
        </violation>
        <violation beginline="53" endline="53" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getInlineStrategy has a boolean flag argument $called, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Fragment/FragmentHandlerTest.php">
        <violation beginline="59" endline="59" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRender'.
        </violation>
        <violation beginline="110" endline="110" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'getHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Fragment/HIncludeFragmentRendererTest.php">
        <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderExceptionWhenControllerAndNoSigner'.
        </violation>
        <violation beginline="41" endline="41" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWithControllerAndSigner'.
        </violation>
        <violation beginline="47" endline="47" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWithUri'.
        </violation>
        <violation beginline="50" endline="50" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWithUri'.
        </violation>
        <violation beginline="57" endline="57" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWhithDefault'.
        </violation>
        <violation beginline="61" endline="61" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWhithDefault'.
        </violation>
        <violation beginline="65" endline="65" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWhithDefault'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Fragment/InlineFragmentRendererTest.php">
        <violation beginline="38" endline="38" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRender'.
        </violation>
        <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWithControllerReference'.
        </violation>
        <violation beginline="52" endline="52" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWithObjectsAsAttributes'.
        </violation>
        <violation beginline="68" endline="68" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderWithObjectsAsAttributes'.
        </violation>
        <violation beginline="78" endline="78" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderExceptionNoIgnoreErrors'.
        </violation>
        <violation beginline="85" endline="85" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderExceptionIgnoreErrors'.
        </violation>
        <violation beginline="95" endline="95" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRenderExceptionIgnoreErrorsWithAlt'.
        </violation>
        <violation beginline="136" endline="136" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testExceptionInSubRequestsDoesNotMangleOutputBuffers'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Fragment/RoutableFragmentRendererTest.php">
        <violation beginline="25" endline="25" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGenerateFragmentUri'.
        </violation>
        <violation beginline="41" endline="41" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testGenerateFragmentUriWithARequest'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/HttpCache/EsiTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHasSurrogateEsiCapability'.
        </violation>
        <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHasSurrogateEsiCapability'.
        </violation>
        <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHasSurrogateEsiCapability'.
        </violation>
        <violation beginline="47" endline="47" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testAddSurrogateEsiCapability'.
        </violation>
        <violation beginline="94" endline="94" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testProcessDoesNothingIfContentTypeIsNotHtml'.
        </violation>
        <violation beginline="106" endline="106" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testProcess'.
        </violation>
        <violation beginline="128" endline="128" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testProcessEscapesPhpTags'.
        </violation>
        <violation beginline="142" endline="142" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testProcessWhenNoSrcInAnEsi'.
        </violation>
        <violation beginline="151" endline="151" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testProcessRemoveSurrogateControlHeader'.
        </violation>
        <violation beginline="171" endline="171" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHandle'.
        </violation>
        <violation beginline="183" endline="183" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHandleWhenResponseIsNot200'.
        </violation>
        <violation beginline="192" endline="192" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHandleWhenResponseIsNot200AndErrorsAreIgnored'.
        </violation>
        <violation beginline="202" endline="202" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testHandleWhenResponseIsNot200AndAltIsPresent'.
        </violation>
        <violation beginline="218" endline="223" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getCache uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/HttpCache/HttpCacheTest.php">
        <violation beginline="48" endline="48" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTerminateDelegatesTerminationOnlyForTerminableInterface'.
        </violation>
        <violation beginline="60" endline="60" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTerminateDelegatesTerminationOnlyForTerminableInterface'.
        </violation>
        <violation beginline="181" endline="181" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testRespondsWith304OnlyIfIfNoneMatchAndIfModifiedSinceBothMatch'.
        </violation>
        <violation beginline="206" endline="210" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testValidatesPrivateResponsesCachedOnTheClient uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="211" endline="221" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testValidatesPrivateResponsesCachedOnTheClient uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="216" endline="220" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testValidatesPrivateResponsesCachedOnTheClient uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="244" endline="244" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testStoresResponsesWhenNoCacheRequestDirectivePresent'.
        </violation>
        <violation beginline="381" endline="381" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testFetchesResponseFromBackendWhenCacheMisses'.
        </violation>
        <violation beginline="393" endline="393" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testDoesNotCacheSomeStatusCodeResponses'.
        </violation>
        <violation beginline="405" endline="405" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testDoesNotCacheResponsesWithExplicitNoStoreDirective'.
        </violation>
        <violation beginline="424" endline="424" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testCachesResponsesWithExplicitNoCacheDirective'.
        </violation>
        <violation beginline="434" endline="434" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testCachesResponsesWithAnExpirationHeader'.
        </violation>
        <violation beginline="483" endline="483" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testCachesResponsesWithALastModifiedValidatorButNoFreshnessInformation'.
        </violation>
        <violation beginline="506" endline="506" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testHitsCachedResponsesWithExpiresHeader'.
        </violation>
        <violation beginline="507" endline="507" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testHitsCachedResponsesWithExpiresHeader'.
        </violation>
        <violation beginline="531" endline="531" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testHitsCachedResponseWithMaxAgeDirective'.
        </violation>
        <violation beginline="555" endline="555" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testHitsCachedResponseWithSMaxAgeDirective'.
        </violation>
        <violation beginline="614" endline="614" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testFetchesFullResponseWhenCacheStaleAndNoValidatorsPresent'.
        </violation>
        <violation beginline="632" endline="632" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testFetchesFullResponseWhenCacheStaleAndNoValidatorsPresent'.
        </violation>
        <violation beginline="654" endline="654" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testValidatesCachedResponsesWithLastModifiedAndNoFreshnessInformation'.
        </violation>
        <violation beginline="726" endline="726" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testReplacesCachedResponsesWhenValidationResultsInNon304Response'.
        </violation>
        <violation beginline="800" endline="800" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\DateTime' in method 'testSendsNoContentWhenFresh'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/HttpCache/HttpCacheTestCase.php">
        <violation beginline="110" endline="110" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method request has a boolean flag argument $esi, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="124" endline="124" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'request'.
        </violation>
        <violation beginline="152" endline="152" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method catchExceptions has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="171" endline="173" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method clearDirectory uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/HttpCache/StoreTest.php">
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'setUp'.
        </violation>
        <violation beginline="33" endline="33" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\HttpKernel\Tests\HttpCache\HttpCacheTestCase' in method 'setUp'.
        </violation>
        <violation beginline="44" endline="44" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\HttpKernel\Tests\HttpCache\HttpCacheTestCase' in method 'tearDown'.
        </violation>
        <violation beginline="67" endline="67" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testRemovesEntriesForKeyWithPurge'.
        </violation>
        <violation beginline="110" endline="110" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testDoesNotFindAnEntryWithLookupWhenNoneExists'.
        </violation>
        <violation beginline="118" endline="118" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCanonizesUrlsForCacheKeys'.
        </violation>
        <violation beginline="119" endline="119" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testCanonizesUrlsForCacheKeys'.
        </violation>
        <violation beginline="160" endline="160" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testSucceedsQuietlyWhenInvalidateCalledWithNoMatchingEntries'.
        </violation>
        <violation beginline="167" endline="167" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testDoesNotReturnEntriesThatVaryWithLookup'.
        </violation>
        <violation beginline="168" endline="168" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testDoesNotReturnEntriesThatVaryWithLookup'.
        </violation>
        <violation beginline="177" endline="177" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testStoresMultipleResponsesForEachVaryCombination'.
        </violation>
        <violation beginline="181" endline="181" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testStoresMultipleResponsesForEachVaryCombination'.
        </violation>
        <violation beginline="185" endline="185" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testStoresMultipleResponsesForEachVaryCombination'.
        </violation>
        <violation beginline="198" endline="198" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testOverwritesNonVaryingResponseWithStore'.
        </violation>
        <violation beginline="203" endline="203" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testOverwritesNonVaryingResponseWithStore'.
        </violation>
        <violation beginline="208" endline="208" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testOverwritesNonVaryingResponseWithStore'.
        </violation>
        <violation beginline="218" endline="218" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testLocking'.
        </violation>
        <violation beginline="234" endline="234" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'storeSimpleEntry'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/HttpCache/TestHttpKernel.php">
        <violation beginline="48" endline="48" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/HttpCache/TestMultipleHttpKernel.php">
        <violation beginline="51" endline="51" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method handle has a boolean flag argument $catch, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/HttpKernelTest.php">
        <violation beginline="245" endline="245" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTerminate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/KernelTest.php">
        <violation beginline="289" endline="289" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpKernel\Kernel' in method 'testStripComments'.
        </violation>
        <violation beginline="718" endline="718" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTerminateReturnsSilentlyIfKernelIsNotBooted'.
        </violation>
        <violation beginline="742" endline="742" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTerminateDelegatesTerminationOnlyForTerminableInterface'.
        </violation>
        <violation beginline="764" endline="764" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'testTerminateDelegatesTerminationOnlyForTerminableInterface'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Logger.php">
        <violation beginline="25" endline="25" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getLogs has a boolean flag argument $level, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Profiler/MongoDbProfilerStorageTest.php">
        <violation beginline="124" endline="126" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setUp uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Profiler/ProfilerTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'testCollect'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Tests/Profiler/SqliteProfilerStorageTest.php">
        <violation beginline="37" endline="37" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Locale.php">
        <violation beginline="51" endline="51" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\ResourceBundle' in method 'getDisplayCountries'.
        </violation>
        <violation beginline="106" endline="106" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\ResourceBundle' in method 'getDisplayLanguages'.
        </violation>
        <violation beginline="159" endline="159" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\ResourceBundle' in method 'getDisplayLocales'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Resources/data/build-data.php">
        <violation beginline="45" endline="47" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method clear_directory uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="97" endline="97" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\ResourceBundle' in method 'load_resource_bundle'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Resources/stubs/functions.php">
        <violation beginline="24" endline="24" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'intl_is_failure'.
        </violation>
        <violation beginline="37" endline="37" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'intl_get_error_code'.
        </violation>
        <violation beginline="50" endline="50" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'intl_get_error_message'.
        </violation>
        <violation beginline="64" endline="64" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'intl_error_name'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Stub/DateFormat/FullTransformer.php">
        <violation beginline="159" endline="159" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'parse'.
        </violation>
        <violation beginline="165" endline="165" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'parse'.
        </violation>
        <violation beginline="306" endline="306" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'calculateUnixTimestamp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Stub/DateFormat/MonthTransformer.php">
        <violation beginline="135" endline="137" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method extractDateOptions uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Stub/StubIntlDateFormatter.php">
        <violation beginline="198" endline="198" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'format'.
        </violation>
        <violation beginline="199" endline="199" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'format'.
        </violation>
        <violation beginline="200" endline="200" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'format'.
        </violation>
        <violation beginline="214" endline="214" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'format'.
        </violation>
        <violation beginline="215" endline="215" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'format'.
        </violation>
        <violation beginline="216" endline="216" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'format'.
        </violation>
        <violation beginline="436" endline="436" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'parse'.
        </violation>
        <violation beginline="437" endline="437" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'parse'.
        </violation>
        <violation beginline="517" endline="523" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setTimeZoneId uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="534" endline="534" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\DateFormat\TimeZoneTransformer' in method 'setTimeZoneId'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Stub/StubLocale.php">
        <violation beginline="238" endline="238" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method filterMatches has a boolean flag argument $canonicalize, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="435" endline="435" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method lookup has a boolean flag argument $canonicalize, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="502" endline="502" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'getStubData'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Stub/StubNumberFormatter.php">
        <violation beginline="510" endline="510" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'parse'.
        </violation>
        <violation beginline="511" endline="511" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'parse'.
        </violation>
        <violation beginline="512" endline="512" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'parse'.
        </violation>
        <violation beginline="630" endline="630" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'resetError'.
        </violation>
        <violation beginline="631" endline="631" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'resetError'.
        </violation>
        <violation beginline="632" endline="632" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Locale\Stub\StubIntl' in method 'resetError'.
        </violation>
        <violation beginline="679" endline="679" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'getCurrencySymbol'.
        </violation>
        <violation beginline="693" endline="693" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'getCurrencyFractionDigits'.
        </violation>
        <violation beginline="707" endline="707" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'getCurrencyRoundingIncrement'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Tests/LocaleTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayCountriesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="25" endline="25" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayCountriesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="26" endline="26" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayCountriesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="37" endline="37" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayLanguagesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayLanguagesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="40" endline="40" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayLanguagesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="51" endline="51" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayLocalesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="53" endline="53" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayLocalesReturnsFullListForSubLocale'.
        </violation>
        <violation beginline="54" endline="54" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'testGetDisplayLocalesReturnsFullListForSubLocale'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Tests/Stub/StubCollatorTest.php">
        <violation beginline="146" endline="146" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubCollator' in method 'testStaticCreate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Tests/Stub/StubIntlDateFormatterTest.php">
        <violation beginline="48" endline="50" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testConstructorDefaultTimeZoneStub uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="61" endline="63" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testConstructorDefaultTimeZoneIntl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="89" endline="91" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testFormatWithUnsupportedTimestampArgument uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="105" endline="105" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="106" endline="106" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="107" endline="107" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="107" endline="107" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="110" endline="110" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="342" endline="342" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatIllegalArgumentErrorStub'.
        </violation>
        <violation beginline="343" endline="343" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatIllegalArgumentErrorStub'.
        </violation>
        <violation beginline="344" endline="344" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatIllegalArgumentErrorStub'.
        </violation>
        <violation beginline="344" endline="344" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatIllegalArgumentErrorStub'.
        </violation>
        <violation beginline="347" endline="347" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatIllegalArgumentErrorStub'.
        </violation>
        <violation beginline="457" endline="459" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testFormatWithTimezoneFormatOptionAndDifferentThanUtcStub uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="471" endline="473" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testFormatWithTimezoneFormatOptionAndDifferentThanUtcIntl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="485" endline="487" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testFormatWithGmtTimezoneStub uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="499" endline="501" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testFormatWithGmtTimezoneIntl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="712" endline="712" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testGetErrorCode'.
        </violation>
        <violation beginline="718" endline="718" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testGetErrorMessage'.
        </violation>
        <violation beginline="780" endline="780" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="781" endline="781" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="782" endline="782" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="782" endline="782" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="785" endline="785" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="966" endline="966" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseErrorStub'.
        </violation>
        <violation beginline="967" endline="967" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseErrorStub'.
        </violation>
        <violation beginline="968" endline="968" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseErrorStub'.
        </violation>
        <violation beginline="968" endline="968" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseErrorStub'.
        </violation>
        <violation beginline="971" endline="971" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseErrorStub'.
        </violation>
        <violation beginline="1133" endline="1135" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testSetTimeZoneIdStub uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1150" endline="1152" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testSetTimeZoneIdIntl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1172" endline="1177" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setTimeZoneIdProvider uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1191" endline="1193" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testSetTimeZoneIdWithGmtTimeZoneWithMinutesOffsetStub uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1203" endline="1205" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testSetTimeZoneIdWithGmtTimeZoneWithMinutesOffsetIntl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1212" endline="1212" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntlDateFormatter' in method 'testStaticCreate'.
        </violation>
        <violation beginline="1230" endline="1232" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method createDateTime uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Tests/Stub/StubIntlTest.php">
        <violation beginline="38" endline="38" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testGetErrorName'.
        </violation>
        <violation beginline="47" endline="47" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testGetErrorNameWithIntl'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Tests/Stub/StubLocaleTest.php">
        <violation beginline="24" endline="24" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayCountriesWithUnsupportedLocale'.
        </violation>
        <violation beginline="29" endline="29" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayCountries'.
        </violation>
        <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetCountries'.
        </violation>
        <violation beginline="44" endline="44" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayLanguagesWithUnsupportedLocale'.
        </violation>
        <violation beginline="49" endline="49" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayLanguages'.
        </violation>
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetLanguages'.
        </violation>
        <violation beginline="64" endline="64" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetCurrenciesDataWithUnsupportedLocale'.
        </violation>
        <violation beginline="71" endline="71" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetCurrenciesData'.
        </violation>
        <violation beginline="80" endline="80" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayCurrencies'.
        </violation>
        <violation beginline="84" endline="84" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayCurrencies'.
        </violation>
        <violation beginline="90" endline="90" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetCurrencies'.
        </violation>
        <violation beginline="99" endline="99" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayLocalesWithUnsupportedLocale'.
        </violation>
        <violation beginline="104" endline="104" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayLocales'.
        </violation>
        <violation beginline="110" endline="110" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetLocales'.
        </violation>
        <violation beginline="119" endline="119" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testAcceptFromHttp'.
        </violation>
        <violation beginline="132" endline="132" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testComposeLocale'.
        </violation>
        <violation beginline="140" endline="140" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testFilterMatches'.
        </violation>
        <violation beginline="148" endline="148" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetAllVariants'.
        </violation>
        <violation beginline="153" endline="153" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDefault'.
        </violation>
        <violation beginline="161" endline="161" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayLanguage'.
        </violation>
        <violation beginline="169" endline="169" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayName'.
        </violation>
        <violation beginline="177" endline="177" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayRegion'.
        </violation>
        <violation beginline="185" endline="185" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayScript'.
        </violation>
        <violation beginline="193" endline="193" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetDisplayVariant'.
        </violation>
        <violation beginline="201" endline="201" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetKeywords'.
        </violation>
        <violation beginline="209" endline="209" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetPrimaryLanguage'.
        </violation>
        <violation beginline="217" endline="217" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetRegion'.
        </violation>
        <violation beginline="225" endline="225" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testGetScript'.
        </violation>
        <violation beginline="237" endline="237" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testLookup'.
        </violation>
        <violation beginline="245" endline="245" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testParseLocale'.
        </violation>
        <violation beginline="253" endline="253" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubLocale' in method 'testSetDefault'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Locale/Tests/Stub/StubNumberFormatterTest.php">
        <violation beginline="71" endline="71" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubNumberFormatter' in method 'testCreateStub'.
        </violation>
        <violation beginline="78" endline="78" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\NumberFormatter' in method 'testCreateIntl'.
        </violation>
        <violation beginline="288" endline="288" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="289" endline="289" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="290" endline="290" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="290" endline="290" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="293" endline="293" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testFormatStub'.
        </violation>
        <violation beginline="749" endline="752" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseStub uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="754" endline="754" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="755" endline="755" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="756" endline="756" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="756" endline="756" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="759" endline="759" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Stub\StubIntl' in method 'testParseStub'.
        </violation>
        <violation beginline="777" endline="780" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseIntl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="872" endline="874" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseTypeInt64StubWith32BitIntegerInPhp32Bit uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="932" endline="934" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseTypeInt64StubWith64BitIntegerInPhp64Bit uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="946" endline="948" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseTypeInt64StubWith64BitIntegerInPhp64Bit uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="973" endline="975" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseTypeInt64IntlWith32BitIntegerInPhp32Bit uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1036" endline="1038" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseTypeInt64IntlWith64BitIntegerInPhp64Bit uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1050" endline="1052" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testParseTypeInt64IntlWith64BitIntegerInPhp64Bit uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Process/ExecutableFinder.php">
        <violation beginline="61" endline="66" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method find uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="68" endline="73" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method find uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Process/Process.php">
        <violation beginline="148" endline="150" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="251" endline="264" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method start uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="424" endline="426" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method wait uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1003" endline="1005" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildCallback uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="1079" endline="1079" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method processFileHandles has a boolean flag argument $closeEmptyHandles, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Process/ProcessBuilder.php">
        <violation beginline="80" endline="80" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method inheritEnvironmentVariables has a boolean flag argument $inheritEnv, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="150" endline="152" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getProcess uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/PropertyAccessor.php">
        <violation beginline="86" endline="88" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="127" endline="129" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method readPropertiesUntil uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="165" endline="169" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method readIndex uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="238" endline="240" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method readProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="292" endline="292" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\PropertyAccess\StringUtil' in method 'writeProperty'.
        </violation>
        <violation beginline="332" endline="340" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method writeProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="337" endline="339" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method writeProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="363" endline="365" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method writeProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/PropertyPath.php">
        <violation beginline="102" endline="105" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/PropertyPathBuilder.php">
        <violation beginline="57" endline="59" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method append uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="260" endline="294" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method resize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/Tests/Fixtures/CustomArrayObject.php">
        <violation beginline="41" endline="43" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method offsetSet uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/Tests/PropertyAccessorCollectionTest.php">
        <violation beginline="298" endline="298" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\StringUtil' in method 'noAdderRemoverData'.
        </violation>
        <violation beginline="326" endline="326" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\StringUtil' in method 'noAdderRemoverData'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/Tests/StringUtilTest.php">
        <violation beginline="133" endline="133" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\PropertyAccess\StringUtil' in method 'testSingularify'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Generator/UrlGenerator.php">
        <violation beginline="180" endline="184" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doGenerate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="231" endline="233" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doGenerate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="259" endline="261" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doGenerate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="306" endline="308" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getRelativePath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/XmlFileLoader.php">
        <violation beginline="196" endline="196" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'loadFile'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/YamlFileLoader.php">
        <violation beginline="50" endline="50" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'load'.
        </violation>
        <violation beginline="79" endline="81" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Matcher/ApacheUrlMatcher.php">
        <violation beginline="65" endline="67" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method match uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="90" endline="92" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method match uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Matcher/Dumper/DumperPrefixCollection.php">
        <violation beginline="98" endline="100" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method mergeSlashNodes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="101" endline="103" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method mergeSlashNodes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php">
        <violation beginline="135" endline="137" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compileRoutes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="168" endline="170" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compilePrefixRoutes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="218" endline="220" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compileRoute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="221" endline="234" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compileRoute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="260" endline="270" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compileRoute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="313" endline="315" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compileRoute uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Route.php">
        <violation beginline="235" endline="237" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setSchemes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="272" endline="274" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setMethods uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/RouteCollection.php">
        <violation beginline="208" endline="213" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addCollection uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="250" endline="252" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addPrefix uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/RouteCompiler.php">
        <violation beginline="156" endline="158" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method compilePattern uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="210" endline="231" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method computeRegexp uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="215" endline="230" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method computeRegexp uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Router.php">
        <violation beginline="122" endline="124" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setOptions uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="264" endline="281" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getGenerator uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Tests/Fixtures/CustomXmlFileLoader.php">
        <violation beginline="24" endline="24" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'loadFile'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Tests/Generator/UrlGeneratorTest.php">
        <violation beginline="507" endline="507" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Routing\Generator\UrlGenerator' in method 'testGetRelativePath'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Routing/Tests/Matcher/Dumper/DumperPrefixCollectionTest.php">
        <violation beginline="107" endline="109" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method collectionToString uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Dbal/AclProvider.php">
        <violation beginline="69" endline="69" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method findChildren has a boolean flag argument $directChildrenOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="118" endline="121" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method findAcls uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="139" endline="142" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method findAcls uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="151" endline="157" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method findAcls uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="283" endline="296" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getAncestorLookupSql uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="323" endline="330" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getFindChildrenSql uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="385" endline="389" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateAceIdentityMap uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="429" endline="431" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method doUpdateAceIdentityMap uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="537" endline="560" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method hydrateObjectIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="554" endline="556" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method hydrateObjectIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="580" endline="582" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method hydrateObjectIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="587" endline="589" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method hydrateObjectIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="597" endline="599" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method hydrateObjectIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="600" endline="606" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method hydrateObjectIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="603" endline="605" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method hydrateObjectIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Dbal/MutableAclProvider.php">
        <violation beginline="166" endline="168" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method propertyChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="180" endline="182" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method propertyChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="183" endline="185" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method propertyChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="186" endline="213" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method propertyChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="197" endline="199" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method propertyChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="200" endline="202" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method propertyChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="206" endline="212" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method propertyChanged uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="244" endline="246" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateAcl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="326" endline="334" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateAcl uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="518" endline="520" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getInsertSecurityIdentitySql uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="586" endline="588" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getSelectSecurityIdentityIdSql uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="760" endline="762" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateFieldAceProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="767" endline="769" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateFieldAceProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="780" endline="782" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateFieldAceProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="817" endline="819" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateAceProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="824" endline="826" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateAceProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="837" endline="839" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method updateAceProperty uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Domain/Acl.php">
        <violation beginline="174" endline="174" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertClassAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="182" endline="182" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertClassFieldAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="190" endline="190" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertObjectAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="198" endline="198" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertObjectFieldAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="214" endline="214" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isFieldGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="222" endline="222" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="471" endline="473" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method insertAce uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="520" endline="522" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method insertFieldAce uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Domain/ObjectIdentity.php">
        <violation beginline="65" endline="65" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\ClassUtils' in method 'fromDomainObject'.
        </violation>
        <violation beginline="67" endline="67" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\ClassUtils' in method 'fromDomainObject'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Domain/ObjectIdentityRetrievalStrategy.php">
        <violation beginline="30" endline="30" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Security\Acl\Domain\ObjectIdentity' in method 'getObjectIdentity'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Domain/PermissionGrantingStrategy.php">
        <violation beginline="47" endline="47" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="79" endline="79" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isFieldGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Domain/SecurityIdentityRetrievalStrategy.php">
        <violation beginline="54" endline="54" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Security\Acl\Domain\UserSecurityIdentity' in method 'getSecurityIdentities'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Domain/UserSecurityIdentity.php">
        <violation beginline="58" endline="58" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\ClassUtils' in method 'fromAccount'.
        </violation>
        <violation beginline="75" endline="75" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\ClassUtils' in method 'fromToken'.
        </violation>
        <violation beginline="75" endline="75" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\ClassUtils' in method 'fromToken'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Model/AclInterface.php">
        <violation beginline="86" endline="86" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isFieldGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="97" endline="97" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Model/AclProviderInterface.php">
        <violation beginline="29" endline="29" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method findChildren has a boolean flag argument $directChildrenOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Model/MutableAclInterface.php">
        <violation beginline="70" endline="70" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertClassAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="82" endline="82" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertClassFieldAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="93" endline="93" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertObjectAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="105" endline="105" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method insertObjectFieldAce has a boolean flag argument $granting, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Model/PermissionGrantingStrategyInterface.php">
        <violation beginline="30" endline="30" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="43" endline="43" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method isFieldGranted has a boolean flag argument $administrativeMode, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Acl/Voter/AclVoter.php">
        <violation beginline="39" endline="39" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $allowIfObjectIdentityUnavailable, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="70" endline="72" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method vote uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php">
        <violation beginline="45" endline="45" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $eraseCredentials, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php">
        <violation beginline="43" endline="43" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $hideUserNotFoundExceptions, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="61" endline="69" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method checkAuthentication uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php">
        <violation beginline="43" endline="43" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $hideUserNotFoundExceptions, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php">
        <violation beginline="102" endline="104" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setUser uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="107" endline="109" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setUser uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/AccessDecisionManager.php">
        <violation beginline="40" endline="40" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $allowIfAllAbstainDecisions, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="40" endline="40" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $allowIfEqualGrantedDeniedDecisions, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/BasePasswordEncoder.php">
        <violation beginline="84" endline="84" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\StringUtils' in method 'comparePasswords'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/MessageDigestPasswordEncoder.php">
        <violation beginline="32" endline="32" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $encodeHashAsBase64, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/Pbkdf2PasswordEncoder.php">
        <violation beginline="42" endline="42" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $encodeHashAsBase64, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="63" endline="65" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method encodePassword uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/PlaintextPasswordEncoder.php">
        <violation beginline="28" endline="28" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $ignorePasswordCase, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/SecurityContext.php">
        <violation beginline="41" endline="41" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $alwaysAuthenticate, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/ChainUserProvider.php">
        <violation beginline="74" endline="76" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method refreshUser uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/User.php">
        <violation beginline="31" endline="31" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $enabled, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="31" endline="31" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $userNonExpired, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="31" endline="31" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $credentialsNonExpired, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="31" endline="31" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $userNonLocked, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Util/SecureRandom.php">
        <violation beginline="53" endline="55" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="84" endline="87" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method nextBytes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php">
        <violation beginline="40" endline="40" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $useForward, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/RetryAuthenticationEntryPoint.php">
        <violation beginline="44" endline="46" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method start uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php">
        <violation beginline="146" endline="148" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method handle uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ContextListener.php">
        <violation beginline="130" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method onKernelResponse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/DigestAuthenticationListener.php">
        <violation beginline="207" endline="209" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method calculateServerDigest uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php">
        <violation beginline="117" endline="146" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method onKernelException uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="134" endline="136" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method onKernelException uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="153" endline="155" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method onKernelException uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/SwitchUserListener.php">
        <violation beginline="87" endline="93" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method handle uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="119" endline="121" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method attemptSwitchUser uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php">
        <violation beginline="81" endline="84" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method attemptAuthentication uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Http/HttpUtils.php">
        <violation beginline="106" endline="108" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method checkRequestPath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Dbal/AclProviderBenchmarkTest.php">
        <violation beginline="40" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Doctrine\DBAL\DriverManager' in method 'setUp'.
        </violation>
        <violation beginline="132" endline="134" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method chooseClassId uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="173" endline="175" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method chooseSid uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="203" endline="205" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method generateAces uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Dbal/AclProviderTest.php">
        <violation beginline="130" endline="130" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'setUp'.
        </violation>
        <violation beginline="134" endline="137" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Doctrine\DBAL\DriverManager' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Dbal/MutableAclProviderTest.php">
        <violation beginline="399" endline="401" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method importAcls uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="435" endline="435" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PDO' in method 'setUp'.
        </violation>
        <violation beginline="439" endline="442" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Doctrine\DBAL\DriverManager' in method 'setUp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Domain/AclTest.php">
        <violation beginline="496" endline="498" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getListener uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Domain/AuditLoggerTest.php">
        <violation beginline="35" endline="46" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testLogIfNeeded uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="54" endline="59" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testLogIfNeeded uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Domain/ObjectIdentityTest.php">
        <violation beginline="49" endline="49" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Acl\Domain\ObjectIdentity' in method 'testFromDomainObjectPrefersInterfaceOverGetId'.
        </violation>
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Acl\Domain\ObjectIdentity' in method 'testFromDomainObjectWithoutInterface'.
        </violation>
        <violation beginline="62" endline="62" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Acl\Domain\ObjectIdentity' in method 'testFromDomainObjectWithProxy'.
        </violation>
        <violation beginline="74" endline="76" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testEquals uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Domain/PermissionGrantingStrategyTest.php">
        <violation beginline="158" endline="160" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testIsGrantedStrategies uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Domain/RoleSecurityIdentityTest.php">
        <violation beginline="41" endline="43" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testEquals uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Domain/SecurityIdentityRetrievalStrategyTest.php">
        <violation beginline="31" endline="40" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGetSecurityIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="51" endline="57" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testGetSecurityIdentities uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="161" endline="177" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getStrategy uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Domain/UserSecurityIdentityTest.php">
        <violation beginline="66" endline="66" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Acl\Domain\UserSecurityIdentity' in method 'getCompareData'.
        </violation>
        <violation beginline="69" endline="69" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Acl\Domain\UserSecurityIdentity' in method 'getCompareData'.
        </violation>
        <violation beginline="70" endline="70" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Acl\Domain\UserSecurityIdentity' in method 'getCompareData'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Acl/Voter/AclVoterTest.php">
        <violation beginline="95" endline="97" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testVoteWhenNoObjectIsPassed uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="122" endline="124" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testVoteWhenOidStrategyReturnsNull uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="208" endline="210" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testVoteGrantsAccess uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="297" endline="299" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testVoteGrantsFieldAccess uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="390" endline="390" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getVoter has a boolean flag argument $allowIfObjectIdentityUnavailable, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Authentication/Provider/DaoAuthenticationProviderTest.php">
        <violation beginline="273" endline="273" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getProvider has a boolean flag argument $user, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="273" endline="273" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getProvider has a boolean flag argument $userChecker, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Authentication/Provider/PreAuthenticatedAuthenticationProviderTest.php">
        <violation beginline="90" endline="90" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getSupportedToken has a boolean flag argument $user, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="90" endline="90" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getSupportedToken has a boolean flag argument $credentials, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="117" endline="117" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getProvider has a boolean flag argument $user, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="117" endline="117" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getProvider has a boolean flag argument $userChecker, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Authentication/Provider/UserAuthenticationProviderTest.php">
        <violation beginline="198" endline="198" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getProvider has a boolean flag argument $userChecker, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="198" endline="198" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method getProvider has a boolean flag argument $hide, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Authorization/Voter/AuthenticatedVoterTest.php">
        <violation beginline="74" endline="76" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getToken uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Util/ClassUtilsTest.php">
        <violation beginline="36" endline="36" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\ClassUtils' in method 'testGetRealClass'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Util/SecureRandomTest.php">
        <violation beginline="84" endline="91" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testRun uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="119" endline="125" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testLongRun uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Util/StringUtilsTest.php">
        <violation beginline="20" endline="20" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\StringUtils' in method 'testEquals'.
        </violation>
        <violation beginline="21" endline="21" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Security\Core\Util\StringUtils' in method 'testEquals'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Core/Validator/Constraints/UserPasswordValidatorTest.php">
        <violation beginline="110" endline="110" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method createPasswordEncoder has a boolean flag argument $isPasswordValid, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Http/EntryPoint/RetryAuthenticationEntryPointTest.php">
        <violation beginline="48" endline="48" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'dataForStart'.
        </violation>
        <violation beginline="54" endline="54" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'dataForStart'.
        </violation>
        <violation beginline="60" endline="60" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'dataForStart'.
        </violation>
        <violation beginline="66" endline="66" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'dataForStart'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Security/Tests/Http/HttpUtilsTest.php">
        <violation beginline="166" endline="166" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\Request' in method 'getRequest'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Serializer/Encoder/JsonDecode.php">
        <violation beginline="26" endline="26" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method __construct has a boolean flag argument $associative, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="62" endline="64" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method decode uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Serializer/Encoder/XmlEncoder.php">
        <violation beginline="57" endline="59" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method encode uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="252" endline="254" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="260" endline="262" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="263" endline="265" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="271" endline="273" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="314" endline="316" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="319" endline="321" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildXml uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Serializer/Normalizer/GetSetMethodNormalizer.php">
        <violation beginline="130" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method denormalize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Serializer/Tests/Fixtures/ScalarDummy.php">
        <violation beginline="33" endline="35" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method denormalize uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Serializer/Tests/SerializerTest.php">
        <violation beginline="59" endline="59" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Serializer\Tests\Model' in method 'testSerialize'.
        </violation>
        <violation beginline="95" endline="95" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Serializer\Tests\Model' in method 'testSerializeNoNormalizer'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Templating/Asset/PathPackage.php">
        <violation beginline="36" endline="42" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Templating/Helper/AssetsHelper.php">
        <violation beginline="44" endline="46" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Templating/Helper/SlotsHelper.php">
        <violation beginline="93" endline="93" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method get has a boolean flag argument $default, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="121" endline="121" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method output has a boolean flag argument $default, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Templating/TemplateReference.php">
        <violation beginline="54" endline="56" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method set uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Templating/Tests/Loader/FilesystemLoaderTest.php">
        <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Templating\Tests\Loader\ProjectTemplateLoader2' in method 'testIsAbsolutePath'.
        </violation>
        <violation beginline="40" endline="40" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Templating\Tests\Loader\ProjectTemplateLoader2' in method 'testIsAbsolutePath'.
        </violation>
        <violation beginline="41" endline="41" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Templating\Tests\Loader\ProjectTemplateLoader2' in method 'testIsAbsolutePath'.
        </violation>
        <violation beginline="42" endline="42" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Templating\Tests\Loader\ProjectTemplateLoader2' in method 'testIsAbsolutePath'.
        </violation>
        <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Templating\Tests\Loader\ProjectTemplateLoader2' in method 'testIsAbsolutePath'.
        </violation>
        <violation beginline="44" endline="44" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Templating\Tests\Loader\ProjectTemplateLoader2' in method 'testIsAbsolutePath'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/PoFileDumper.php">
        <violation beginline="33" endline="35" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method format uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/YamlFileDumper.php">
        <violation beginline="29" endline="29" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'format'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Interval.php">
        <violation beginline="60" endline="68" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method test uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/CsvFileLoader.php">
        <violation beginline="68" endline="70" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method load uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuResFileLoader.php">
        <violation beginline="77" endline="79" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method flatten uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/MoFileLoader.php">
        <violation beginline="99" endline="101" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PoFileLoader.php">
        <violation beginline="130" endline="132" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/YamlFileLoader.php">
        <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'load'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/MessageCatalogue.php">
        <violation beginline="155" endline="157" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method add uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="277" endline="279" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method deleteMetadata uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/MessageSelector.php">
        <violation beginline="59" endline="59" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Translation\Interval' in method 'choose'.
        </violation>
        <violation beginline="63" endline="65" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method choose uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="70" endline="70" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Translation\Interval' in method 'choose'.
        </violation>
        <violation beginline="75" endline="75" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Translation\PluralizationRules' in method 'choose'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Tests/IntervalTest.php">
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Translation\Interval' in method 'testTest'.
        </violation>
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Translation\Interval' in method 'testTestException'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Tests/PluralizationRulesTest.php">
        <violation beginline="100" endline="100" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validateMatrix has a boolean flag argument $expectSuccess, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="106" endline="108" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validateMatrix uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="117" endline="117" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Translation\PluralizationRules' in method 'generateTestData'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Translation/Translator.php">
        <violation beginline="175" endline="177" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method transChoice uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraint.php">
        <violation beginline="99" endline="101" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="115" endline="117" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintViolationList.php">
        <violation beginline="147" endline="149" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method offsetSet uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/CallbackValidator.php">
        <violation beginline="52" endline="58" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/ChoiceValidator.php">
        <violation beginline="52" endline="54" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="55" endline="57" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/CountryValidator.php">
        <violation beginline="42" endline="42" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'validate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/FileValidator.php">
        <violation beginline="47" endline="49" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="50" endline="50" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\UploadedFile' in method 'validate'.
        </violation>
        <violation beginline="51" endline="53" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="52" endline="52" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\UploadedFile' in method 'validate'.
        </violation>
        <violation beginline="123" endline="125" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/LanguageValidator.php">
        <violation beginline="42" endline="42" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'validate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/LengthValidator.php">
        <violation beginline="42" endline="44" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/LocaleValidator.php">
        <violation beginline="42" endline="42" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Locale\Locale' in method 'validate'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/MaxLengthValidator.php">
        <violation beginline="51" endline="53" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/MinLengthValidator.php">
        <violation beginline="51" endline="53" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ExecutionContext.php">
        <violation beginline="94" endline="100" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addViolation uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="167" endline="170" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addViolationAtSubPath uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="280" endline="280" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $traverse, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="280" endline="280" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ExecutionContextInterface.php">
        <violation beginline="155" endline="155" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $traverse, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="155" endline="155" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/GraphWalker.php">
        <violation beginline="189" endline="189" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method walkReference has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/ClassMetadata.php">
        <violation beginline="81" endline="83" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="92" endline="94" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method accept uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/GetterMetadata.php">
        <violation beginline="35" endline="37" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method __construct uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/Loader/AbstractLoader.php">
        <violation beginline="59" endline="61" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method newConstraint uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/Loader/AnnotationLoader.php">
        <violation beginline="69" endline="71" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method loadClassMetadata uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/Loader/XmlFileLoader.php">
        <violation beginline="99" endline="101" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseConstraints uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="104" endline="106" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseConstraints uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="131" endline="133" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseValues uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="134" endline="136" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseValues uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="140" endline="142" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseValues uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="165" endline="167" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseOptions uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="168" endline="170" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseOptions uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="190" endline="190" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Config\Util\XmlUtils' in method 'parseFile'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/Loader/YamlFileLoader.php">
        <violation beginline="32" endline="32" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'loadClassMetadata'.
        </violation>
        <violation beginline="118" endline="124" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseNodes uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/MemberMetadata.php">
        <violation beginline="71" endline="73" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method addConstraint uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/ConstraintValidatorTest.php">
        <violation beginline="34" endline="34" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Constraints/CollectionValidatorCustomArrayObjectTest.php">
        <violation beginline="41" endline="43" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method offsetSet uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Constraints/FileValidatorTest.php">
        <violation beginline="322" endline="322" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\UploadedFile' in method 'uploadedFileErrorProvider'.
        </violation>
        <violation beginline="335" endline="335" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\HttpFoundation\File\UploadedFile' in method 'uploadedFileErrorProvider'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Constraints/LengthValidatorTest.php">
        <violation beginline="108" endline="108" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testValidValuesMin has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="124" endline="124" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testValidValuesMax has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="140" endline="140" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testValidValuesExact has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="156" endline="156" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testInvalidValuesMin has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="180" endline="180" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testInvalidValuesMax has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="204" endline="204" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testInvalidValuesExact has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Constraints/MaxLengthValidatorTest.php">
        <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
        <violation beginline="75" endline="75" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testValidValues has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="101" endline="101" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testInvalidValues has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Constraints/MaxValidatorTest.php">
        <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Constraints/MinLengthValidatorTest.php">
        <violation beginline="45" endline="45" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
        <violation beginline="75" endline="75" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testValidValues has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="101" endline="101" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method testInvalidValues has a boolean flag argument $mbOnly, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Constraints/MinValidatorTest.php">
        <violation beginline="42" endline="42" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/ExecutionContextTest.php">
        <violation beginline="73" endline="73" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/GraphWalkerTest.php">
        <violation beginline="81" endline="81" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/Mapping/ClassMetadataFactoryTest.php">
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'handle'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/ValidatorBuilderTest.php">
        <violation beginline="40" endline="40" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/ValidatorContextTest.php">
        <violation beginline="43" endline="43" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Tests/ValidatorFactoryTest.php">
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\PHPUnit_Util_ErrorHandler' in method 'deprecationErrorHandler'.
        </violation>
        <violation beginline="103" endline="103" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Validator\ValidatorFactory' in method 'testBuildDefaultFromAnnotationsWithCustomNamespaces'.
        </violation>
        <violation beginline="116" endline="116" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Validator\ValidatorFactory' in method 'testBuildDefaultFromXml'.
        </violation>
        <violation beginline="129" endline="129" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Validator\ValidatorFactory' in method 'testBuildDefaultFromYaml'.
        </violation>
        <violation beginline="142" endline="142" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Validator\ValidatorFactory' in method 'testBuildDefaultFromStaticMethod'.
        </violation>
        <violation beginline="159" endline="159" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Validator\ValidatorFactory' in method 'testBuildDefaultFromMultipleLoaders'.
        </violation>
        <violation beginline="181" endline="181" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Validator\ValidatorFactory' in method 'testBuildDefaultThrowsExceptionIfNoLoaderIsFound'.
        </violation>
        <violation beginline="189" endline="191" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Validator\ValidatorFactory' in method 'testBuildDefaultThrowsExceptionIfUnknownExtension'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ValidationVisitor.php">
        <violation beginline="123" endline="123" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $traverse, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="123" endline="123" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="168" endline="170" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method validate uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ValidationVisitorInterface.php">
        <violation beginline="66" endline="66" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $traverse, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="66" endline="66" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/Validator.php">
        <violation beginline="85" endline="85" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $traverse, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="85" endline="85" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ValidatorContext.php">
        <violation beginline="56" endline="58" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method setClassMetadataFactory uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ValidatorFactory.php">
        <violation beginline="110" endline="110" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method buildDefault has a boolean flag argument $annotations, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="126" endline="128" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="155" endline="157" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method buildDefault uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/ValidatorInterface.php">
        <violation beginline="41" endline="41" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $traverse, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="41" endline="41" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method validate has a boolean flag argument $deep, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Dumper.php">
        <violation beginline="49" endline="49" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dump has a boolean flag argument $exceptionOnInvalidType, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="49" endline="49" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dump has a boolean flag argument $objectSupport, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Inline' in method 'dump'.
        </violation>
        <violation beginline="56" endline="69" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method dump uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="64" endline="64" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Inline' in method 'dump'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Inline.php">
        <violation beginline="39" endline="39" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method parse has a boolean flag argument $exceptionOnInvalidType, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="39" endline="39" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method parse has a boolean flag argument $objectSupport, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="92" endline="92" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dump has a boolean flag argument $exceptionOnInvalidType, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="92" endline="92" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dump has a boolean flag argument $objectSupport, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="133" endline="133" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Escaper' in method 'dump'.
        </violation>
        <violation beginline="134" endline="134" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Escaper' in method 'dump'.
        </violation>
        <violation beginline="135" endline="135" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Escaper' in method 'dump'.
        </violation>
        <violation beginline="136" endline="136" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Escaper' in method 'dump'.
        </violation>
        <violation beginline="193" endline="193" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method parseScalar has a boolean flag argument $evaluate, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="205" endline="223" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseScalar uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="218" endline="220" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseScalar uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="249" endline="251" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseQuotedScalar uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Parser.php">
        <violation beginline="49" endline="49" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method parse has a boolean flag argument $exceptionOnInvalidType, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="49" endline="49" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method parse has a boolean flag argument $objectSupport, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="94" endline="113" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="110" endline="112" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="121" endline="121" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Inline' in method 'parse'.
        </violation>
        <violation beginline="123" endline="123" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Inline' in method 'parse'.
        </violation>
        <violation beginline="137" endline="165" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="140" endline="142" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="159" endline="162" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="179" endline="184" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="185" endline="191" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="188" endline="190" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="192" endline="244" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="197" endline="197" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Inline' in method 'parse'.
        </violation>
        <violation beginline="299" endline="301" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getNextEmbedBlock uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="333" endline="335" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getNextEmbedBlock uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="379" endline="381" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseValue uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="397" endline="397" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class 'Symfony\Component\Yaml\Inline' in method 'parseValue'.
        </violation>
        <violation beginline="442" endline="444" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parseFoldedScalar uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Tests/DumperTest.php">
        <violation beginline="97" endline="101" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method testSpecifications uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Tests/InlineTest.php">
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testParse'.
        </violation>
        <violation beginline="31" endline="31" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testDump'.
        </violation>
        <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testDump'.
        </violation>
        <violation beginline="35" endline="35" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testDump'.
        </violation>
        <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testDump'.
        </violation>
        <violation beginline="39" endline="39" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testDump'.
        </violation>
        <violation beginline="55" endline="55" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testDumpNumericValueWithLocale'.
        </violation>
        <violation beginline="65" endline="65" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testHashStringsResemblingExponentialNumericsShouldNotBeChangedToINF'.
        </violation>
        <violation beginline="65" endline="65" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testHashStringsResemblingExponentialNumericsShouldNotBeChangedToINF'.
        </violation>
        <violation beginline="74" endline="74" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testParseScalarWithIncorrectlyQuotedStringShouldThrowException'.
        </violation>
        <violation beginline="83" endline="83" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testParseScalarWithIncorrectlyDoubleQuotedStringShouldThrowException'.
        </violation>
        <violation beginline="92" endline="92" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testParseInvalidMappingKeyShouldThrowException'.
        </violation>
        <violation beginline="100" endline="100" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testParseInvalidMappingShouldThrowException'.
        </violation>
        <violation beginline="108" endline="108" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testParseInvalidSequenceShouldThrowException'.
        </violation>
        <violation beginline="116" endline="116" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Inline' in method 'testParseScalarWithCorrectlyQuotedStringShouldReturnString'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Tests/ParserTest.php">
        <violation beginline="64" endline="68" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method getDataFormSpecifications uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="475" endline="480" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testSequenceInAMapping'.
        </violation>
        <violation beginline="488" endline="493" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testMappingInASequence'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Tests/YamlTest.php">
        <violation beginline="22" endline="22" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testParseAndDump'.
        </violation>
        <violation beginline="23" endline="23" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testParseAndDump'.
        </violation>
        <violation beginline="28" endline="28" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testParseAndDump'.
        </violation>
        <violation beginline="29" endline="29" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testParseAndDump'.
        </violation>
        <violation beginline="36" endline="36" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testEmbededPhp'.
        </violation>
        <violation beginline="37" endline="37" rule="StaticAccess" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#staticaccess" priority="1">
            Avoid using static access to class '\Symfony\Component\Yaml\Yaml' in method 'testEmbededPhp'.
        </violation>
    </file>
    <file name="/var/www/Exercises/QualityAssurance/aufgabe5/Symfony/vendor/symfony/symfony/src/Symfony/Component/Yaml/Yaml.php">
        <violation beginline="96" endline="96" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method parse has a boolean flag argument $exceptionOnInvalidType, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="96" endline="96" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method parse has a boolean flag argument $objectSupport, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="118" endline="120" rule="ElseExpression" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#eleseexpression" priority="1">
            The method parse uses an else expression. Else is never necessary and you can simplify the code to work without else.
        </violation>
        <violation beginline="152" endline="152" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dump has a boolean flag argument $exceptionOnInvalidType, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
        <violation beginline="152" endline="152" rule="BooleanArgumentFlag" ruleset="Clean Code Rules" externalInfoUrl="http://phpmd.org/rules/cleancode.html#booleanargumentflag" priority="1">
            The method dump has a boolean flag argument $objectSupport, which is a certain sign of a Single Responsibility Principle violation.
        </violation>
    </file>
</pmd>
